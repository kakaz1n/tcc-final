{"version":3,"sources":["webpack:///src/app/aerobica-introducao/aerobica-introducao.page.scss","webpack:///src/app/services/dados.service.ts","webpack:///src/app/aerobica-introducao/aerobica-introducao.module.ts","webpack:///src/app/aerobica-introducao/aerobica-introducao.page.ts","webpack:///src/app/aerobica-introducao/aerobica-introducao.page.html","webpack:///src/app/aerobica-introducao/aerobica-introducao-routing.module.ts"],"names":["DadosService","db","dados","UsuariosListRef","push","nome","email","telefone","estado","cidade","senha","id","usuarioRef","object","list","providedIn","AerobicaIntroducaoPageModule","imports","declarations","AerobicaIntroducaoPage","navCtrl","authService","dadosserv","toastController","dadosService","idade","ciclismo","userDetails","subscribe","res","console","log","uid","getIdade_sexo","navigateBack","err","a","getBooking","snapshotChanges","data","payload","toJSON","Date","dob","y","Math","abs","now","getTime","floor","sexo","b","pegarQuestionario","resposta","corrida","setAerobica1","navigateForward","selector","template","routes","path","component","AerobicaIntroducaoPageRoutingModule","forChild","exports"],"mappings":"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","file":"aerobica-introducao-aerobica-introducao-module-es5.js","sourcesContent":["export default \".login {\\n  background-color: secondary;\\n  font-family: Roboto;\\n  font-size: 40px;\\n  line-height: 10px;\\n  text-align: left;\\n}\\n\\nion-content {\\n  --offset-bottom: auto!important;\\n  --overflow: hidden;\\n  overflow: auto;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\nion-content::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n.centralizado {\\n  position: relative;\\n  margin-left: 30%;\\n}\\n\\n.your-class {\\n  position: fixed;\\n  left: 0;\\n  bottom: 30px;\\n  right: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGFlcm9iaWNhLWludHJvZHVjYW8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksMkJBQUE7RUFDRixtQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FBQ0Y7O0FBQ0E7RUFDSSwrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtFQUlBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFESjs7QUFMSTtFQUNFLGFBQUE7QUFPTjs7QUFBRztFQUNDLGtCQUFBO0VBQ0EsZ0JBQUE7QUFHSjs7QUFBQTtFQUNFLGVBQUE7RUFDQSxPQUFBO0VBQ0EsWUFBQTtFQUNBLFFBQUE7QUFHRiIsImZpbGUiOiJhZXJvYmljYS1pbnRyb2R1Y2FvLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHNlY29uZGFyeTtcclxuICBmb250LWZhbWlseTogUm9ib3RvO1xyXG4gIGZvbnQtc2l6ZTogNDBweDtcclxuICBsaW5lLWhlaWdodDogMTBweDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcbmlvbi1jb250ZW50IHsgICAgXHJcbiAgICAtLW9mZnNldC1ib3R0b206IGF1dG8haW1wb3J0YW50O1xyXG4gICAgLS1vdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcbiAgIC5jZW50cmFsaXphZG8ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwJTtcclxufVxyXG5cclxuLnlvdXItY2xhc3Mge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBsZWZ0OiAwO1xyXG4gIGJvdHRvbTogMzBweDtcclxuICByaWdodDogMDtcclxufSJdfQ== */\";","import { Injectable } from '@angular/core';\nimport { Dados } from '../services/dados';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DadosService {\n  UsuariosListRef: AngularFireList<any>;\n  usuarioRef: AngularFireObject<any>;\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // Create\n  createBooking(dados: Dados) {\n    return this.UsuariosListRef.push({\n      nome: dados.nome,\n      email: dados.email,\n      telefone: dados.telefone,\n      estado:dados.estado,\n      cidade:dados.cidade,\n      senha:dados.senha,\n    })\n  }\n\n  // Get Single\n  getBooking(id: string) {\n    this.usuarioRef = this.db.object('/usuarios/' + id);\n    return this.usuarioRef;\n  }\n  pegarQuestionario(id){\n    this.usuarioRef = this.db.object('/questionario/'+id);\n    return this.usuarioRef;\n  }\n  // Get List\n  getBookingList() {\n    this.UsuariosListRef = this.db.list('/usuarios');\n    return this.UsuariosListRef;\n  }\n  \n\n  // Update\n /* updateBooking(id, dados: Dados) {\n    return this.bookingRef.update({\n      name: apt.name,\n      email: apt.email,\n      mobile: apt.mobile\n    })\n  }*/\n\n  // Delete\n  /*deleteBooking(id: string) {\n    this.bookingRef = this.db.object('/appointment/' + id);\n    this.bookingRef.remove();\n  }*/\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AerobicaIntroducaoPageRoutingModule } from './aerobica-introducao-routing.module';\n\nimport { AerobicaIntroducaoPage } from './aerobica-introducao.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AerobicaIntroducaoPageRoutingModule\n  ],\n  declarations: [AerobicaIntroducaoPage]\n})\nexport class AerobicaIntroducaoPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport { DadosService } from './../services/dados.service';\nimport { ToastController } from '@ionic/angular';\nimport { formatDate } from '@angular/common';\nimport { Dados } from '../services/dados';\n\n@Component({\n  selector: 'app-aerobica-introducao',\n  templateUrl: './aerobica-introducao.page.html',\n  styleUrls: ['./aerobica-introducao.page.scss'],\n})\nexport class AerobicaIntroducaoPage implements OnInit {\n  idade= 0;\n  sexo: string;\n  uid: string;\n  user: Dados;\n  resposta: '';\n  corrida: '';\n  ciclismo = '';\n  constructor(public navCtrl: NavController,\n\n    private authService: AuthenticateService,\n    private dadosserv: DadosService,\n    public toastController: ToastController, private dadosService: DadosService\n  ) { }\n  ngOnInit() {\n    this.authService.userDetails().subscribe(res => {\n      console.log('res', res);\n      if (res !== null) {\n        this.uid = res.uid;\n        console.log(\"uid = \" + this.uid)\n        this.getIdade_sexo()\n\n        //console.log(res.uid)\n        // console.log(this.authService.lerDados(res.uid))\n      } else {\n        this.navCtrl.navigateBack('');\n      }\n      console.log(this.authService.userDetails)\n    }, err => {\n      console.log('err', err);\n    })\n  }\n  getIdade_sexo() {\n    console.log(this.uid)\n    console.log(\"a\")\n    let a = this.dadosService.getBooking(this.uid)\n    console.log(a)\n    a.snapshotChanges().subscribe(res => {\n      const data = res.payload.toJSON()\n      console.log(data)\n      data['email']\n      console.log(formatDate(new Date, 'yyyy/MM/dd', 'en'))\n      let dob = new Date(data['dados']['dob'])\n      let y = Math.abs(Date.now() - dob.getTime())\n      this.idade = Math.floor((y / (1000 * 3600 * 24)) / 365);\n      this.sexo = data['dados']['sexo']\n      console.log(this.idade)\n      console.log(this.sexo)\n    })\n    let b = this.dadosService.pegarQuestionario(this.uid)\n    b.snapshotChanges().subscribe(res => {\n      const data = res.payload.toJSON()\n      console.log(data)\n\n      this.resposta = data['questionarios']['questionario3']['resposta']\n      this.ciclismo = data['questionarios']['questionario4']['ciclismo']\n      this.corrida = data['questionarios']['questionario4']['corrida']\n      console.log(this.resposta)\n      console.log(this.ciclismo)\n      console.log(this.corrida)\n    })\n    console.log(this.resposta)\n      console.log(this.ciclismo)\n      console.log(this.corrida)\n  }\n  proxima_pagina() {\n    console.log(this.uid)\n    this.authService.setAerobica1(this.uid);\n    this.navCtrl.navigateForward('aerobica-registro');\n  }\n\n  voltar() {\n    this.navCtrl.navigateBack('dashboard')\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div style=\\\"width: 20%;float: left;\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"voltar()\\\">\\n          <ion-icon name=\\\"home\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n    </div>\\n    <div class=\\\"login\\\" style=\\\"text-align: center;float: left;margin-bottom:05%;margin-left: 2%;\\\">\\n      <ion-label style=\\\"font-size:x-large;text-align: center;\\\">\\n        Capacidade Aeróbica<br><br>\\n      </ion-label>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen=\\\"true\\\" color=\\\"primary\\\" class=\\\"ion-content\\\">\\n  <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n    <div display=\\\"block\\\" *ngIf=\\\"idade > 50\\\">\\n      <!-- homens < 50-->\\n      <h2 style=\\\"text-align: center;\\\">\\n        Teste de caminhada de 6 minutos\\n      </h2>\\n      <h4 style=\\\"text-align: justify;text-justify: distribute\\\">\\n        <h3 style=\\\"text-align: center;\\\">Equipamento</h3>\\n        • Terreno plano e com espaço para caminhada.<br>\\n        • Relógio de pulso ou cronômetro.<br>\\n        • Celular para medir a distância percorrida (use o aplicativo de sua preferência).<br>\\n\\n        <h3 style=\\\"text-align: center;\\\">Preparação</h3>\\n        • Use roupas largas e confortáveis, e sapatos apropriados para a caminhada.<br>\\n        • Teste se o seu celular/aplicativo está funcionado corretamente para o monitoramento da\\n        distância percorrida.<br>\\n        • Faça um aquecimento andando devagar por alguns minutos. Depois disto, faça um\\n        alongamento suave para os quadríceps (pernas), apoiando-se na parede (média de 5 min).<br>\\n\\n        <h3 style=\\\"text-align: center;\\\">Procedimentos</h3>\\n        1. Consulte o relógio para registrar o tempo ou acionar o cronômetro.<br>\\n        2. Comece a caminhada e complete 6 minutos caminhando o mais rápido que puder, mas\\n        sem trotar e/ou correr.<br>\\n        3. Pare no lugar e anote imediatamente a distância percorrida (em metros) que seu celular\\n        estará mostrando ao completar os 6 minutos.<br>\\n        4. Registre a distância percorrida no seu perfil pessoal de condicionamento físico. <br>\\n      </h4>\\n    </div>\\n    <div display=\\\"block\\\" *ngIf=\\\"(idade <= 50 && (resposta == 'nao' || (resposta=='sim' && (!corrida && !ciclismo))))\\\">\\n      <!-- mulheres < 50-->\\n      <h2 style=\\\"text-align: center;\\\">\\n        Caminhada Rockport de 1.600 metros\\n      </h2>\\n      <h4 style=\\\"text-align: justify;text-justify: distribute\\\">\\n        <h3 style=\\\"text-align: center;\\\">Equipamento</h3>\\n        • Terreno plano para percorrer 1.600 metros.<br>\\n        • Relógio de pulso ou cronômetro.<br>\\n        <h3 style=\\\"text-align: center;\\\">Preparação</h3>\\n        • Usar roupas largas e confortáveis e sapatos\\n        apropriados para a caminhada.<br>\\n        • Evitar fumar, comer e tomar café duas horas\\n        antes do teste. É aconselhável tomar bebidas\\n        sem cafeína.<br>\\n        • Praticar a tomada de pulsação.<br>\\n        O teste de caminhada requer que você conte os batimentos cardíacos de forma precisa.\\n        Você deverá tomar a sua pulsação e a contagem das batidas do coração.\\n        Sua pulsação deve ser medida na base do dedo polegar no pulso ou no pescoço, bem ao lado da traquéia.\\n        Usará os dedos indicador e médio para encontrar seu pulso e contará as batidas durante quinze segundos.\\n        Contando a primeira que sentir como sendo zero.\\n        <h3 style=\\\"text-align: center;\\\">Procedimentos</h3>\\n        1. Aquecer-se andando devagar por alguns minutos e, então alongar suavemente os quadríceps apoiando-se na\\n        parede.<br>\\n        2. Consultar o relógio para registrar o tempo ou acionar o cronômetro.<br>\\n        3. Começar a caminhada. Completar a distância de 1.600 metros o mais rápido que puder.<br>\\n        4. Anotar imediatamente o tempo empregado para completar a distância.<br>\\n        5. Medir sua pulsação e contar o número de batimentos cardíacos em quinze segundos. Lembrar de contar como zero\\n        a primeira\\n        batida que sentir.<br>\\n        6. Registrar seu tempo e o número de batimentos cardíacos no\\n        seu perfil pessoal de condicionamento físico.<br>\\n      </h4>\\n    </div>\\n    <div display=\\\"block\\\" *ngIf=\\\"idade <= 50 && (resposta == 'sim' && (corrida || ciclismo))\\\">\\n      <!-- mulheres < 50-->\\n      <h2 style=\\\"text-align: center;\\\">\\n        Teste de Cooper\\n      </h2>\\n      <h4 style=\\\"text-align: justify;text-justify: distribute\\\">\\n        <h3 style=\\\"text-align: center;\\\">Equipamento</h3>\\n        • Terreno plano e com espaço.<br>\\n        • Relógio de pulso ou cronômetro.<br>\\n        • Celular para medir a distância percorrida (use o aplicativo de sua preferência).<br>\\n        <h3 style=\\\"text-align: center;\\\">Preparação</h3>\\n        • Use roupas largas e confortáveis, e sapatos apropriados para a caminhada.<br>\\n        • Teste se o seu celular/aplicativo está funcionado corretamente para o monitoramento da\\n        distância percorrida.<br>\\n        • Faça um aquecimento andando devagar por alguns minutos e, então alongue suavemente\\n        os quadríceps (pernas), apoiando-se na parede.<br>\\n        <h3 style=\\\"text-align: center;\\\">Procedimentos</h3>\\n        1. Consulte o relógio para registrar o tempo ou acionar o cronômetro.<br>\\n        2. Comece o teste e complete 12 minutos caminhando ou correndo, de acordo com seu\\n        condicionamento. Lembre-se de manter a mesma velocidade (aproximadamente) durante\\n        todo o percurso.<br>\\n        3. Pare no lugar e anote imediatamente a distância percorrida (em metros) ao completar\\n        os 12 minutos.<br>\\n        4. Registre a distância percorrida no seu perfil pessoal de condicionamento físico.<br>\\n      </h4>\\n    </div>\\n  </ion-item>\\n  <div class=\\\"centralizado\\\">\\n    <ion-button full color=\\\"tertiary\\\" (click)=\\\"proxima_pagina()\\\">\\n      Continuar</ion-button>\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AerobicaIntroducaoPage } from './aerobica-introducao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AerobicaIntroducaoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AerobicaIntroducaoPageRoutingModule {}\n"]}