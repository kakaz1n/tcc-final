{"version":3,"sources":["webpack:///src/app/sentar-levantar-registro/sentar-levantar-registro.page.scss","webpack:///src/app/sentar-levantar-registro/sentar-levantar-registro.page.html","webpack:///src/app/sentar-levantar-registro/sentar-levantar-registro.module.ts","webpack:///src/app/sentar-levantar-registro/sentar-levantar-registro-routing.module.ts","webpack:///src/app/services/dados.service.ts","webpack:///src/app/sentar-levantar-registro/sentar-levantar-registro.page.ts"],"names":["SentarLevantarRegistroPageModule","imports","declarations","routes","path","component","SentarLevantarRegistroPageRoutingModule","forChild","exports","DadosService","db","dados","UsuariosListRef","push","nome","email","telefone","estado","cidade","senha","id","usuarioRef","object","list","providedIn","SentarLevantarRegistroPage","navCtrl","authService","formBuilder","dadosserv","toastController","errorMessage","successMessage","validation_messages","type","message","validations_form","group","tempo","required","userDetails","subscribe","res","console","log","uid","navigateBack","err","value","RegistrarFunc4","goDashboard","navigateForward","selector","template"],"mappings":"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","file":"sentar-levantar-registro-sentar-levantar-registro-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZW50YXItbGV2YW50YXItcmVnaXN0cm8ucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div style=\\\"width: 20%;float: left;\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"voltar()\\\">\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n    </div>\\n    <div class=\\\"login\\\" style=\\\"text-align: center;float: left;margin-bottom:05%;margin-left: 5%;\\\">\\n      <ion-label style=\\\"font-size:x-large;text-align: center;\\\">\\n        Funcional\\n      </ion-label>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\" color=\\\"primary\\\" class=\\\"ion-content\\\">\\n  <div display=\\\"block\\\" style=\\\"align-items: center;text-align: center;\\\">\\n\\n      <h2 style=\\\"text-align: center;\\\">\\n        Sentar e Levantar\\n      </h2>\\n    <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"Registrar_func1(validations_form.value)\\\">\\n      <h3>Número de repetições</h3>\\n      <ion-input placeholder=\\\"50\\\"  type=\\\"number\\\" style=\\\"font-size: xx-large;\\\"formControlName=\\\"tempo\\\" class=\\\"form-controll\\\" required ></ion-input>\\n      <ion-button class=\\\"centralizado\\\" color=\\\"tertiary\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">\\n        Registrar</ion-button>\\n    </form>\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SentarLevantarRegistroPageRoutingModule } from './sentar-levantar-registro-routing.module';\n\nimport { SentarLevantarRegistroPage } from './sentar-levantar-registro.page';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SentarLevantarRegistroPageRoutingModule,ReactiveFormsModule\n  ],\n  declarations: [SentarLevantarRegistroPage]\n})\nexport class SentarLevantarRegistroPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SentarLevantarRegistroPage } from './sentar-levantar-registro.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SentarLevantarRegistroPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SentarLevantarRegistroPageRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { Dados } from '../services/dados';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DadosService {\n  UsuariosListRef: AngularFireList<any>;\n  usuarioRef: AngularFireObject<any>;\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // Create\n  createBooking(dados: Dados) {\n    return this.UsuariosListRef.push({\n      nome: dados.nome,\n      email: dados.email,\n      telefone: dados.telefone,\n      estado:dados.estado,\n      cidade:dados.cidade,\n      senha:dados.senha,\n    })\n  }\n\n  // Get Single\n  getBooking(id: string) {\n    this.usuarioRef = this.db.object('/usuarios/' + id);\n    return this.usuarioRef;\n  }\n  pegarQuestionario(id){\n    this.usuarioRef = this.db.object('/questionario/'+id);\n    return this.usuarioRef;\n  }\n  // Get List\n  getBookingList() {\n    this.UsuariosListRef = this.db.list('/usuarios');\n    return this.UsuariosListRef;\n  }\n  \n\n  // Update\n /* updateBooking(id, dados: Dados) {\n    return this.bookingRef.update({\n      name: apt.name,\n      email: apt.email,\n      mobile: apt.mobile\n    })\n  }*/\n\n  // Delete\n  /*deleteBooking(id: string) {\n    this.bookingRef = this.db.object('/appointment/' + id);\n    this.bookingRef.remove();\n  }*/\n}","import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport {DadosService} from './../services/dados.service';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-sentar-levantar-registro',\n  templateUrl: './sentar-levantar-registro.page.html',\n  styleUrls: ['./sentar-levantar-registro.page.scss'],\n})\nexport class SentarLevantarRegistroPage implements OnInit {\n  validations_form: FormGroup;\n\n  errorMessage: string = '';\n  successMessage: string = '';\n  validation_messages = {\n    'tempo':[\n      {\n        type: 'required', message: 'É necessário aceitar essa opção.'\n      },\n    ],\n\n  };\n  uid: string;\n  constructor(public navCtrl: NavController,\n\n    private authService: AuthenticateService,\n    private formBuilder: FormBuilder,\n    private dadosserv:DadosService,\n    public toastController: ToastController) { }\n\n    ngOnInit() {\n      this.validations_form = this.formBuilder.group({        \n        tempo: ['',Validators.required],        \n      }\n      );\n      this.authService.userDetails().subscribe(res => {\n        console.log('res', res);\n        if (res !== null) {\n          this.uid = res.uid;\n          console.log(\"uid = \" +this.uid)  \n          //console.log(res.uid)\n          // console.log(this.authService.lerDados(res.uid))\n        } else {\n          this.navCtrl.navigateBack('');\n        }\n        console.log(this.authService.userDetails)\n      }, err => {\n        console.log('err', err);\n      })\n    }\n    voltar(){\n      this.navCtrl.navigateBack('/sentar-levantar-introducao');\n    }\n    Registrar_func1(value) {\n      this.authService.RegistrarFunc4(this.uid,value)\n      this.goDashboard()\n    }\n    goDashboard(){\n      this.navCtrl.navigateForward('/dashboard');\n    }\n\n}\n"]}