{"version":3,"sources":["webpack:///src/app/antropometria-registro/antropometria-registro.page.ts","webpack:///src/app/antropometria-registro/antropometria-registro.module.ts","webpack:///src/app/antropometria-registro/antropometria-registro.page.scss","webpack:///src/app/antropometria-registro/antropometria-registro-routing.module.ts","webpack:///src/app/antropometria-registro/antropometria-registro.page.html"],"names":["AntropometriaRegistroPage","navCtrl","authService","formBuilder","dadosserv","toastController","errorMessage","successMessage","validation_messages","type","message","validations_form","group","peso","required","altura","cintura","quadril","userDetails","subscribe","res","console","log","uid","navigateBack","err","value","Registrar_antro","goFlexibilidade","navigateForward","selector","template","AntropometriaRegistroPageModule","imports","declarations","routes","path","component","AntropometriaRegistroPageRoutingModule","forChild","exports"],"mappings":"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","file":"antropometria-registro-antropometria-registro-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport {DadosService} from './../services/dados.service';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-antropometria-registro',\n  templateUrl: './antropometria-registro.page.html',\n  styleUrls: ['./antropometria-registro.page.scss'],\n})\nexport class AntropometriaRegistroPage implements OnInit {\n  validations_form: FormGroup;\n\n  errorMessage: string = '';\n  successMessage: string = '';\n  validation_messages = {\n    'termos':[\n      {\n        type: 'required', message: 'É necessário aceitar essa opção.'\n      },\n      {\n        type: 'pattern', message: 'É necessário aceitar essa opção.'\n      }\n    ],\n\n  };\n  uid: string;\n\n  constructor(public navCtrl: NavController,\n\n    private authService: AuthenticateService,\n    private formBuilder: FormBuilder,\n    private dadosserv:DadosService,\n    public toastController: ToastController) { }\n\n  ngOnInit() {\n    this.validations_form = this.formBuilder.group({        \n      peso: ['',Validators.required],\n      altura: ['',Validators.required],\n      cintura: ['',Validators.required],\n      quadril: ['',Validators.required],\n    }\n    );\n    this.authService.userDetails().subscribe(res => {\n      console.log('res', res);\n      if (res !== null) {\n        this.uid = res.uid;\n        console.log(\"uid = \" +this.uid)  \n        //console.log(res.uid)\n        // console.log(this.authService.lerDados(res.uid))\n      } else {\n        this.navCtrl.navigateBack('');\n      }\n      console.log(this.authService.userDetails)\n    }, err => {\n      console.log('err', err);\n    })\n  }\n  voltar(){\n    this.navCtrl.navigateBack('/antropometria-introducao');\n  }\n  Registrar_antro(value) {\n    this.authService.Registrar_antro(this.uid,value)\n    this.goFlexibilidade()\n  }\n  goFlexibilidade(){\n    this.navCtrl.navigateForward('/flexibilidade-introducao');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AntropometriaRegistroPageRoutingModule } from './antropometria-registro-routing.module';\n\nimport { AntropometriaRegistroPage } from './antropometria-registro.page';\nimport { BrMaskerModule } from 'br-mask';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AntropometriaRegistroPageRoutingModule,\n    ReactiveFormsModule,BrMaskerModule\n  ],\n  declarations: [AntropometriaRegistroPage]\n})\nexport class AntropometriaRegistroPageModule {}\n","export default \".login {\\n  background-color: secondary;\\n  font-family: Roboto;\\n  font-size: 40px;\\n  line-height: 10px;\\n  text-align: left;\\n}\\n\\n.container {\\n  position: relative;\\n  text-align: center;\\n  color: white;\\n}\\n\\n.centered {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  font-size: 15pt;\\n  font-weight: bold;\\n}\\n\\nion-input .text-input {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGFudHJvcG9tZXRyaWEtcmVnaXN0cm8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksMkJBQUE7RUFDRixtQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FBQUY7O0FBRUE7RUFDSSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUVDO0VBQ0csa0JBQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLGdDQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBRUk7RUFBYSxrQkFBQTtBQUVqQiIsImZpbGUiOiJhbnRyb3BvbWV0cmlhLXJlZ2lzdHJvLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4ubG9naW57XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzZWNvbmRhcnk7XHJcbiAgZm9udC1mYW1pbHk6IFJvYm90bztcclxuICBmb250LXNpemU6IDQwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDEwcHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG4uY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcbiAgXHJcbiAuY2VudGVyZWQge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIGZvbnQtc2l6ZTogMTVwdDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuICBpb24taW5wdXR7IFxyXG4gICAgLnRleHQtaW5wdXR7IHRleHQtYWxpZ246IGNlbnRlcjsgfVxyXG59XHJcbiJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AntropometriaRegistroPage } from './antropometria-registro.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AntropometriaRegistroPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AntropometriaRegistroPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div style=\\\"width: 20%;float: left;\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"voltar()\\\">\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n    </div>\\n    <div class=\\\"login\\\" style=\\\"text-align: center;float: left;margin-top: 2%;margin-left: 2%;\\\">\\n      <ion-label style=\\\"font-size:xx-large;text-align: center;\\\">\\n        Antropometria\\n      </ion-label>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\" color=\\\"primary\\\" class=\\\"ion-content\\\">\\n  <div display=\\\"block\\\" style=\\\"align-items: center;text-align: center;\\\">\\n\\n    <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n      <h2 style=\\\"text-align: center;\\\">\\n        Índice de massa corpórea e proporção entre cintura e quadril\\n      </h2>\\n    </ion-item>\\n    <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"Registrar_antro(validations_form.value)\\\">\\n      <h3>Peso em kg</h3>\\n      <ion-input placeholder=\\\"94\\\" type=\\\"number\\\" style=\\\"font-size: xx-large;\\\"formControlName=\\\"peso\\\" class=\\\"form-controll\\\" required ></ion-input>\\n      <h3>Altura em metros</h3>\\n      <ion-input placeholder=\\\"1,60\\\"  type=\\\"number\\\" style=\\\"font-size: xx-large;\\\"formControlName=\\\"altura\\\" class=\\\"form-controll\\\" required step=\\\"0.01\\\"></ion-input>\\n      <h3>Medida da cintura</h3>\\n      <ion-input placeholder=\\\"85\\\" type=\\\"number\\\" style=\\\"font-size: xx-large;\\\" step=\\\"0.1\\\"formControlName=\\\"cintura\\\" class=\\\"form-controll\\\" required></ion-input>\\n      <h3>Medida do quadril</h3>\\n      <ion-input placeholder=\\\"100\\\"  type=\\\"number\\\" style=\\\"font-size: xx-large;\\\" step=\\\"0.1\\\" formControlName=\\\"quadril\\\" class=\\\"form-controll\\\" required></ion-input>\\n\\n      <ion-button class=\\\"centralizado\\\" color=\\\"tertiary\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">\\n        Registrar</ion-button>\\n    </form>\\n  </div>\\n</ion-content>\";"]}