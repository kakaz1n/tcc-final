{"version":3,"sources":["./src/app/aerobica-introducao/aerobica-introducao.page.scss","./src/app/services/dados.service.ts","./src/app/aerobica-introducao/aerobica-introducao.module.ts","./src/app/aerobica-introducao/aerobica-introducao.page.ts","./src/app/aerobica-introducao/aerobica-introducao.page.html","./src/app/aerobica-introducao/aerobica-introducao-routing.module.ts"],"names":[],"mappings":"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","file":"aerobica-introducao-aerobica-introducao-module-es2015.js","sourcesContent":["export default \".login {\\n  background-color: secondary;\\n  font-family: Roboto;\\n  font-size: 40px;\\n  line-height: 10px;\\n  text-align: left;\\n}\\n\\nion-content {\\n  --offset-bottom: auto!important;\\n  --overflow: hidden;\\n  overflow: auto;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\nion-content::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n.centralizado {\\n  position: relative;\\n  margin-left: 30%;\\n}\\n\\n.your-class {\\n  position: fixed;\\n  left: 0;\\n  bottom: 30px;\\n  right: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGFlcm9iaWNhLWludHJvZHVjYW8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksMkJBQUE7RUFDRixtQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FBQ0Y7O0FBQ0E7RUFDSSwrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtFQUlBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFESjs7QUFMSTtFQUNFLGFBQUE7QUFPTjs7QUFBRztFQUNDLGtCQUFBO0VBQ0EsZ0JBQUE7QUFHSjs7QUFBQTtFQUNFLGVBQUE7RUFDQSxPQUFBO0VBQ0EsWUFBQTtFQUNBLFFBQUE7QUFHRiIsImZpbGUiOiJhZXJvYmljYS1pbnRyb2R1Y2FvLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHNlY29uZGFyeTtcclxuICBmb250LWZhbWlseTogUm9ib3RvO1xyXG4gIGZvbnQtc2l6ZTogNDBweDtcclxuICBsaW5lLWhlaWdodDogMTBweDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcbmlvbi1jb250ZW50IHsgICAgXHJcbiAgICAtLW9mZnNldC1ib3R0b206IGF1dG8haW1wb3J0YW50O1xyXG4gICAgLS1vdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcbiAgIC5jZW50cmFsaXphZG8ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwJTtcclxufVxyXG5cclxuLnlvdXItY2xhc3Mge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBsZWZ0OiAwO1xyXG4gIGJvdHRvbTogMzBweDtcclxuICByaWdodDogMDtcclxufSJdfQ== */\";","import { Injectable } from '@angular/core';\nimport { Dados } from '../services/dados';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DadosService {\n  UsuariosListRef: AngularFireList<any>;\n  usuarioRef: AngularFireObject<any>;\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // Create\n  createBooking(dados: Dados) {\n    return this.UsuariosListRef.push({\n      nome: dados.nome,\n      email: dados.email,\n      telefone: dados.telefone,\n      estado:dados.estado,\n      cidade:dados.cidade,\n      senha:dados.senha,\n    })\n  }\n\n  // Get Single\n  getBooking(id: string) {\n    this.usuarioRef = this.db.object('/usuarios/' + id);\n    return this.usuarioRef;\n  }\n  pegarQuestionario(id){\n    this.usuarioRef = this.db.object('/questionario/'+id);\n    return this.usuarioRef;\n  }\n  // Get List\n  getBookingList() {\n    this.UsuariosListRef = this.db.list('/usuarios');\n    return this.UsuariosListRef;\n  }\n  \n\n  // Update\n /* updateBooking(id, dados: Dados) {\n    return this.bookingRef.update({\n      name: apt.name,\n      email: apt.email,\n      mobile: apt.mobile\n    })\n  }*/\n\n  // Delete\n  /*deleteBooking(id: string) {\n    this.bookingRef = this.db.object('/appointment/' + id);\n    this.bookingRef.remove();\n  }*/\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AerobicaIntroducaoPageRoutingModule } from './aerobica-introducao-routing.module';\n\nimport { AerobicaIntroducaoPage } from './aerobica-introducao.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AerobicaIntroducaoPageRoutingModule\n  ],\n  declarations: [AerobicaIntroducaoPage]\n})\nexport class AerobicaIntroducaoPageModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport { DadosService } from './../services/dados.service';\nimport { ToastController } from '@ionic/angular';\nimport { formatDate } from '@angular/common';\nimport { Dados } from '../services/dados';\n\n@Component({\n  selector: 'app-aerobica-introducao',\n  templateUrl: './aerobica-introducao.page.html',\n  styleUrls: ['./aerobica-introducao.page.scss'],\n})\nexport class AerobicaIntroducaoPage implements OnInit {\n  idade= 0;\n  sexo: string;\n  uid: string;\n  user: Dados;\n  resposta: '';\n  corrida: '';\n  ciclismo = '';\n  constructor(public navCtrl: NavController,\n\n    private authService: AuthenticateService,\n    private dadosserv: DadosService,\n    public toastController: ToastController, private dadosService: DadosService\n  ) { }\n  ngOnInit() {\n    this.authService.userDetails().subscribe(res => {\n      console.log('res', res);\n      if (res !== null) {\n        this.uid = res.uid;\n        console.log(\"uid = \" + this.uid)\n        this.getIdade_sexo()\n\n        //console.log(res.uid)\n        // console.log(this.authService.lerDados(res.uid))\n      } else {\n        this.navCtrl.navigateBack('');\n      }\n      console.log(this.authService.userDetails)\n    }, err => {\n      console.log('err', err);\n    })\n  }\n  getIdade_sexo() {\n    console.log(this.uid)\n    console.log(\"a\")\n    let a = this.dadosService.getBooking(this.uid)\n    console.log(a)\n    a.snapshotChanges().subscribe(res => {\n      const data = res.payload.toJSON()\n      console.log(data)\n      data['email']\n      console.log(formatDate(new Date, 'yyyy/MM/dd', 'en'))\n      let dob = new Date(data['dados']['dob'])\n      let y = Math.abs(Date.now() - dob.getTime())\n      this.idade = Math.floor((y / (1000 * 3600 * 24)) / 365);\n      this.sexo = data['dados']['sexo']\n      console.log(this.idade)\n      console.log(this.sexo)\n    })\n    let b = this.dadosService.pegarQuestionario(this.uid)\n    b.snapshotChanges().subscribe(res => {\n      const data = res.payload.toJSON()\n      console.log(data)\n\n      this.resposta = data['questionarios']['questionario3']['resposta']\n      this.ciclismo = data['questionarios']['questionario4']['ciclismo']\n      this.corrida = data['questionarios']['questionario4']['corrida']\n      console.log(this.resposta)\n      console.log(this.ciclismo)\n      console.log(this.corrida)\n    })\n    console.log(this.resposta)\n      console.log(this.ciclismo)\n      console.log(this.corrida)\n  }\n  proxima_pagina() {\n    console.log(this.uid)\n    this.authService.setAerobica1(this.uid);\n    this.navCtrl.navigateForward('aerobica-registro');\n  }\n\n  voltar() {\n    this.navCtrl.navigateBack('dashboard')\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div style=\\\"width: 20%;float: left;\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"voltar()\\\">\\n          <ion-icon name=\\\"home\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n    </div>\\n    <div class=\\\"login\\\" style=\\\"text-align: center;float: left;margin-bottom:05%;margin-left: 2%;\\\">\\n      <ion-label style=\\\"font-size:x-large;text-align: center;\\\">\\n        Capacidade Aeróbica<br><br>\\n      </ion-label>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen=\\\"true\\\" color=\\\"primary\\\" class=\\\"ion-content\\\">\\n  <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n    <div display=\\\"block\\\" *ngIf=\\\"idade > 50\\\">\\n      <!-- homens < 50-->\\n      <h2 style=\\\"text-align: center;\\\">\\n        Teste de caminhada de 6 minutos\\n      </h2>\\n      <h4 style=\\\"text-align: justify;text-justify: distribute\\\">\\n        <h3 style=\\\"text-align: center;\\\">Equipamento</h3>\\n        • Terreno plano e com espaço para caminhada.<br>\\n        • Relógio de pulso ou cronômetro.<br>\\n        • Celular para medir a distância percorrida (use o aplicativo de sua preferência).<br>\\n\\n        <h3 style=\\\"text-align: center;\\\">Preparação</h3>\\n        • Use roupas largas e confortáveis, e sapatos apropriados para a caminhada.<br>\\n        • Teste se o seu celular/aplicativo está funcionado corretamente para o monitoramento da\\n        distância percorrida.<br>\\n        • Faça um aquecimento andando devagar por alguns minutos. Depois disto, faça um\\n        alongamento suave para os quadríceps (pernas), apoiando-se na parede (média de 5 min).<br>\\n\\n        <h3 style=\\\"text-align: center;\\\">Procedimentos</h3>\\n        1. Consulte o relógio para registrar o tempo ou acionar o cronômetro.<br>\\n        2. Comece a caminhada e complete 6 minutos caminhando o mais rápido que puder, mas\\n        sem trotar e/ou correr.<br>\\n        3. Pare no lugar e anote imediatamente a distância percorrida (em metros) que seu celular\\n        estará mostrando ao completar os 6 minutos.<br>\\n        4. Registre a distância percorrida no seu perfil pessoal de condicionamento físico. <br>\\n      </h4>\\n    </div>\\n    <div display=\\\"block\\\" *ngIf=\\\"(idade <= 50 && (resposta == 'nao' || (resposta=='sim' && (!corrida && !ciclismo))))\\\">\\n      <!-- mulheres < 50-->\\n      <h2 style=\\\"text-align: center;\\\">\\n        Caminhada Rockport de 1.600 metros\\n      </h2>\\n      <h4 style=\\\"text-align: justify;text-justify: distribute\\\">\\n        <h3 style=\\\"text-align: center;\\\">Equipamento</h3>\\n        • Terreno plano para percorrer 1.600 metros.<br>\\n        • Relógio de pulso ou cronômetro.<br>\\n        <h3 style=\\\"text-align: center;\\\">Preparação</h3>\\n        • Usar roupas largas e confortáveis e sapatos\\n        apropriados para a caminhada.<br>\\n        • Evitar fumar, comer e tomar café duas horas\\n        antes do teste. É aconselhável tomar bebidas\\n        sem cafeína.<br>\\n        • Praticar a tomada de pulsação.<br>\\n        O teste de caminhada requer que você conte os batimentos cardíacos de forma precisa.\\n        Você deverá tomar a sua pulsação e a contagem das batidas do coração.\\n        Sua pulsação deve ser medida na base do dedo polegar no pulso ou no pescoço, bem ao lado da traquéia.\\n        Usará os dedos indicador e médio para encontrar seu pulso e contará as batidas durante quinze segundos.\\n        Contando a primeira que sentir como sendo zero.\\n        <h3 style=\\\"text-align: center;\\\">Procedimentos</h3>\\n        1. Aquecer-se andando devagar por alguns minutos e, então alongar suavemente os quadríceps apoiando-se na\\n        parede.<br>\\n        2. Consultar o relógio para registrar o tempo ou acionar o cronômetro.<br>\\n        3. Começar a caminhada. Completar a distância de 1.600 metros o mais rápido que puder.<br>\\n        4. Anotar imediatamente o tempo empregado para completar a distância.<br>\\n        5. Medir sua pulsação e contar o número de batimentos cardíacos em quinze segundos. Lembrar de contar como zero\\n        a primeira\\n        batida que sentir.<br>\\n        6. Registrar seu tempo e o número de batimentos cardíacos no\\n        seu perfil pessoal de condicionamento físico.<br>\\n      </h4>\\n    </div>\\n    <div display=\\\"block\\\" *ngIf=\\\"idade <= 50 && (resposta == 'sim' && (corrida || ciclismo))\\\">\\n      <!-- mulheres < 50-->\\n      <h2 style=\\\"text-align: center;\\\">\\n        Teste de Cooper\\n      </h2>\\n      <h4 style=\\\"text-align: justify;text-justify: distribute\\\">\\n        <h3 style=\\\"text-align: center;\\\">Equipamento</h3>\\n        • Terreno plano e com espaço.<br>\\n        • Relógio de pulso ou cronômetro.<br>\\n        • Celular para medir a distância percorrida (use o aplicativo de sua preferência).<br>\\n        <h3 style=\\\"text-align: center;\\\">Preparação</h3>\\n        • Use roupas largas e confortáveis, e sapatos apropriados para a caminhada.<br>\\n        • Teste se o seu celular/aplicativo está funcionado corretamente para o monitoramento da\\n        distância percorrida.<br>\\n        • Faça um aquecimento andando devagar por alguns minutos e, então alongue suavemente\\n        os quadríceps (pernas), apoiando-se na parede.<br>\\n        <h3 style=\\\"text-align: center;\\\">Procedimentos</h3>\\n        1. Consulte o relógio para registrar o tempo ou acionar o cronômetro.<br>\\n        2. Comece o teste e complete 12 minutos caminhando ou correndo, de acordo com seu\\n        condicionamento. Lembre-se de manter a mesma velocidade (aproximadamente) durante\\n        todo o percurso.<br>\\n        3. Pare no lugar e anote imediatamente a distância percorrida (em metros) ao completar\\n        os 12 minutos.<br>\\n        4. Registre a distância percorrida no seu perfil pessoal de condicionamento físico.<br>\\n      </h4>\\n    </div>\\n  </ion-item>\\n  <div class=\\\"centralizado\\\">\\n    <ion-button full color=\\\"tertiary\\\" (click)=\\\"proxima_pagina()\\\">\\n      Continuar</ion-button>\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AerobicaIntroducaoPage } from './aerobica-introducao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AerobicaIntroducaoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AerobicaIntroducaoPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}