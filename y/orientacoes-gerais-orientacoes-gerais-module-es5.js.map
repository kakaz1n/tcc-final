{"version":3,"sources":["webpack:///src/app/orientacoes-gerais/orientacoes-gerais.page.html","webpack:///src/app/orientacoes-gerais/orientacoes-gerais.module.ts","webpack:///src/app/orientacoes-gerais/orientacoes-gerais.page.scss","webpack:///src/app/orientacoes-gerais/orientacoes-gerais-routing.module.ts","webpack:///src/app/orientacoes-gerais/orientacoes-gerais.page.ts","webpack:///src/app/services/dados.service.ts"],"names":["OrientacoesGeraisPageModule","imports","declarations","routes","path","component","OrientacoesGeraisPageRoutingModule","forChild","exports","OrientacoesGeraisPage","navCtrl","authService","formBuilder","dadosserv","toastController","errorMessage","successMessage","validation_messages","type","message","validations_form","group","termos","compose","required","pattern","userDetails","subscribe","res","console","log","uid","navigateBack","err","$event","currentTarget","checked","patchValue","setOrientacoes_gerais","navigateForward","selector","template","DadosService","db","dados","UsuariosListRef","push","nome","email","telefone","estado","cidade","senha","id","usuarioRef","object","list","providedIn"],"mappings":"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","file":"orientacoes-gerais-orientacoes-gerais-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div class=\\\"login\\\" style=\\\"text-align: center;float: left;margin-bottom: 5%;margin-left: 10%;\\\">\\n      <ion-label style=\\\"font-size:xx-large;text-align: center;\\\">\\n        Orientações Gerais\\n      </ion-label>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen=\\\"true\\\" color=\\\"primary\\\" class=\\\"ion-content\\\">\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"proxima_pagina()\\\">\\n    <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n      <div display=\\\"block\\\">\\n        <h3 style=\\\"text-align: justify;\\\">\\n          Aconselha-se a realização de todos os testes no mesmo dia. Entretanto, caso não tenha tempo disponível ou se canse muito durante a realização dos mesmos, você pode interromper e continuar em outro dia de onde parou.\\n        </h3>\\n        <h4 style=\\\"text-align: justify;text-justify: distribute\\\">\\n          Preparação<br>\\n          - Utilize roupas e calçados (tênis) confortáveis e adequadas para prática de atividade física;<br>\\n          - Evitar fumar, comer e tomar café (ou qualquer bebida que contenha cafeína ou estimulante) nas duas horas que antecedem os testes;<br>\\n          - Se alimentar pelo menos duas horas antes dos testes (não fazer os testes em jejum);<br>\\n          - Não consuma bebidas alcóolicas no dia do teste, bem como no dia anterior;<br>\\n          - Não realize atividade física vigorosa no dia do teste, bem como no dia anterior;<br>\\n          - Caso utilize medicamentos de forma regular, TOME-OS NORMALMENTE e no horário de costume; e<br>\\n          - Há testes que requerem a medida da sua pulsação, o que deve ser praticado com antecedência(veja vídeo de como medir a sua pulsação no video abaixo) .              <br>\\n          <iframe width=\\\"100%\\\"  src=\\\"https://www.youtube.com/embed/QWw-6HqEU-w\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\\n        </h4>\\n        </div>\\n    </ion-item>\\n\\n    <div style=\\\" height: 50%;width:100%;margin-left: 25%;\\\">\\n      <ion-checkbox style=\\\"width: 10%;height: 10%;float: left;\\\" (ionChange)=\\\"onTermsChecked($event)\\\"\\n        fromControlName=\\\"termos\\\" class=\\\"form-controll\\\" color=\\\"transparent\\\" name=\\\"termos\\\"></ion-checkbox>\\n\\n      <h2 style=\\\"margin-left: 15%;font-size: x-large;\\\">Entendi</h2>\\n    </div>\\n    <div class=\\\"estado\\\">\\n      <ion-button (click)=\\\"voltar()\\\" style=\\\"width: 70%;margin-left: 20%;\\\" color=\\\"danger\\\">\\n        Voltar</ion-button>\\n    </div>\\n    <div class=\\\"cidade\\\">\\n      <ion-button  style=\\\"width: 70%;margin-left: 10%;\\\" color=\\\"tertiary\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">\\n        Continuar</ion-button>\\n    </div>\\n\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n    <label class=\\\"success-message\\\">{{successMessage}}</label>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrientacoesGeraisPageRoutingModule } from './orientacoes-gerais-routing.module';\n\nimport { OrientacoesGeraisPage } from './orientacoes-gerais.page';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrientacoesGeraisPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [OrientacoesGeraisPage]\n})\nexport class OrientacoesGeraisPageModule {}\n","export default \".estado {\\n  float: left;\\n  width: 50%;\\n}\\n\\n.cidade {\\n  width: 50%;\\n  float: left;\\n}\\n\\n.login {\\n  background-color: secondary;\\n  font-family: Roboto;\\n  font-size: 40px;\\n  line-height: 10px;\\n  text-align: left;\\n}\\n\\na {\\n  background-color: transparent;\\n  color: white;\\n}\\n\\nion-content {\\n  --offset-bottom: auto!important;\\n  --overflow: hidden;\\n  overflow: auto;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\nion-content::-webkit-scrollbar {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXG9yaWVudGFjb2VzLWdlcmFpcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxXQUFBO0VBQ0EsVUFBQTtBQUFKOztBQUVFO0VBQ0UsVUFBQTtFQUNBLFdBQUE7QUFDSjs7QUFDRztFQUNDLDJCQUFBO0VBQ0YsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQUVGOztBQUFBO0VBQ0ksNkJBQUE7RUFDRixZQUFBO0FBR0Y7O0FBREE7RUFDSSwrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtFQUlBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFDSjs7QUFQSTtFQUNFLGFBQUE7QUFTTiIsImZpbGUiOiJvcmllbnRhY29lcy1nZXJhaXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5lc3RhZG97XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgfVxyXG4gIC5jaWRhZGV7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgfVxyXG4gICAubG9naW57XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzZWNvbmRhcnk7XHJcbiAgZm9udC1mYW1pbHk6IFJvYm90bztcclxuICBmb250LXNpemU6IDQwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDEwcHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5he1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcbmlvbi1jb250ZW50IHsgICAgXHJcbiAgICAtLW9mZnNldC1ib3R0b206IGF1dG8haW1wb3J0YW50O1xyXG4gICAgLS1vdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9Il19 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrientacoesGeraisPage } from './orientacoes-gerais.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrientacoesGeraisPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrientacoesGeraisPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport {DadosService} from './../services/dados.service';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-orientacoes-gerais',\n  templateUrl: './orientacoes-gerais.page.html',\n  styleUrls: ['./orientacoes-gerais.page.scss'],\n})\nexport class OrientacoesGeraisPage implements OnInit {\n\n  validations_form: FormGroup;\n\n  errorMessage: string = '';\n  successMessage: string = '';\n  validation_messages = {\n    'termos':[\n      {\n        type: 'required', message: 'É necessário aceitar essa opção.'\n      },\n      {\n        type: 'pattern', message: 'É necessário aceitar essa opção.'\n      }\n    ],\n\n  };\n  uid: string;\n\n  constructor(public navCtrl: NavController,\n\n    private authService: AuthenticateService,\n    private formBuilder: FormBuilder,\n    private dadosserv:DadosService,\n    public toastController: ToastController) { }\n\n    ngOnInit() {\n      this.validations_form = this.formBuilder.group({        \n        termos:['',Validators.compose([\n          Validators.required,Validators.pattern('true')\n        ])]}\n      );\n      this.authService.userDetails().subscribe(res => {\n        console.log('res', res);\n        if (res !== null) {\n          this.uid = res.uid;\n          console.log(\"uid = \" +this.uid)  \n          //console.log(res.uid)\n          // console.log(this.authService.lerDados(res.uid))\n        } else {\n          this.navCtrl.navigateBack('');\n        }\n        console.log(this.authService.userDetails)\n      }, err => {\n        console.log('err', err);\n      })\n    }\n    onTermsChecked($event){\n      console.log($event.currentTarget.checked)\n      this.validations_form.patchValue({termos: $event.currentTarget.checked})\n      console.log(this.validations_form)\n    }\n    proxima_pagina(){\n      console.log(this.uid)\n      this.authService.setOrientacoes_gerais(this.uid);\n      this.navCtrl.navigateForward('/antropometria-introducao');\n    }  \n    \n    voltar(){\n      this.navCtrl.navigateBack('/treino-iniciar');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Dados } from '../services/dados';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DadosService {\n  UsuariosListRef: AngularFireList<any>;\n  usuarioRef: AngularFireObject<any>;\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // Create\n  createBooking(dados: Dados) {\n    return this.UsuariosListRef.push({\n      nome: dados.nome,\n      email: dados.email,\n      telefone: dados.telefone,\n      estado:dados.estado,\n      cidade:dados.cidade,\n      senha:dados.senha,\n    })\n  }\n\n  // Get Single\n  getBooking(id: string) {\n    this.usuarioRef = this.db.object('/usuarios/' + id);\n    return this.usuarioRef;\n  }\n  pegarQuestionario(id){\n    this.usuarioRef = this.db.object('/questionario/'+id);\n    return this.usuarioRef;\n  }\n  // Get List\n  getBookingList() {\n    this.UsuariosListRef = this.db.list('/usuarios');\n    return this.UsuariosListRef;\n  }\n  \n\n  // Update\n /* updateBooking(id, dados: Dados) {\n    return this.bookingRef.update({\n      name: apt.name,\n      email: apt.email,\n      mobile: apt.mobile\n    })\n  }*/\n\n  // Delete\n  /*deleteBooking(id: string) {\n    this.bookingRef = this.db.object('/appointment/' + id);\n    this.bookingRef.remove();\n  }*/\n}"]}