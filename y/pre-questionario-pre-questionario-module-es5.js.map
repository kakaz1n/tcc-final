{"version":3,"sources":["webpack:///src/app/pre-questionario/pre-questionario.page.html","webpack:///src/app/pre-questionario/pre-questionario-routing.module.ts","webpack:///src/app/pre-questionario/pre-questionario.module.ts","webpack:///src/app/services/dados.service.ts","webpack:///src/app/pre-questionario/pre-questionario.page.ts","webpack:///src/app/pre-questionario/pre-questionario.page.scss"],"names":["routes","path","component","PreQuestionarioPageRoutingModule","imports","forChild","exports","PreQuestionarioPageModule","declarations","DadosService","db","dados","UsuariosListRef","push","nome","email","telefone","estado","cidade","senha","id","usuarioRef","object","list","providedIn","PreQuestionarioPage","navCtrl","authService","formBuilder","dadosserv","toastController","alertController","errorMessage","successMessage","validation_messages","type","message","create","cssClass","buttons","backdropDismiss","alert","present","validations_form","group","termos","compose","required","pattern","userDetails","subscribe","res","console","log","uid","navigateBack","err","presentAlert","$event","currentTarget","checked","patchValue","logoutUser","then","error","setQuestionario1","navigateForward","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,gCAAgC;AAAA;AAAA,O;;AAAhCA,sCAAgC,6DAJ5C,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI4C,GAAhCH,gCAAgC,CAAhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKAI,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAVrC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,iGAJO,EAKP,kEALO,CADD;AAQRI,oBAAY,EAAE,CAAC,0EAAD;AARN,OAAT,CAUqC,GAAzBD,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCbAE,YAAY;AAIvB,8BAAoBC,EAApB,EAA6C;AAAA;;AAAzB,eAAAA,EAAA,GAAAA,EAAA;AAA4B,SAJzB,CAMvB;;;AANuB;AAAA;AAAA,iBAOvB,uBAAcC,KAAd,EAA4B;AAC1B,mBAAO,KAAKC,eAAL,CAAqBC,IAArB,CAA0B;AAC/BC,kBAAI,EAAEH,KAAK,CAACG,IADmB;AAE/BC,mBAAK,EAAEJ,KAAK,CAACI,KAFkB;AAG/BC,sBAAQ,EAAEL,KAAK,CAACK,QAHe;AAI/BC,oBAAM,EAACN,KAAK,CAACM,MAJkB;AAK/BC,oBAAM,EAACP,KAAK,CAACO,MALkB;AAM/BC,mBAAK,EAACR,KAAK,CAACQ;AANmB,aAA1B,CAAP;AAQD,WAhBsB,CAkBvB;;AAlBuB;AAAA;AAAA,iBAmBvB,oBAAWC,EAAX,EAAuB;AACrB,iBAAKC,UAAL,GAAkB,KAAKX,EAAL,CAAQY,MAAR,CAAe,eAAeF,EAA9B,CAAlB;AACA,mBAAO,KAAKC,UAAZ;AACD;AAtBsB;AAAA;AAAA,iBAuBvB,2BAAkBD,EAAlB,EAAoB;AAClB,iBAAKC,UAAL,GAAkB,KAAKX,EAAL,CAAQY,MAAR,CAAe,mBAAiBF,EAAhC,CAAlB;AACA,mBAAO,KAAKC,UAAZ;AACD,WA1BsB,CA2BvB;;AA3BuB;AAAA;AAAA,iBA4BvB,0BAAiB;AACf,iBAAKT,eAAL,GAAuB,KAAKF,EAAL,CAAQa,IAAR,CAAa,WAAb,CAAvB;AACA,mBAAO,KAAKX,eAAZ;AACD;AA/BsB;;AAAA;AAAA,S;;;;gBANhB;;;;AAMIH,kBAAY,6DAJxB,iEAAW;AACVe,kBAAU,EAAE;AADF,OAAX,CAIwB,GAAZf,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCMAgB,mBAAmB;AAgB9B,qCACUC,OADV,EAGUC,WAHV,EAIUC,WAJV,EAKUC,SALV,EAMSC,eANT,EAMiDC,eANjD,EAMiF;AAAA;;AALvE,eAAAL,OAAA,GAAAA,OAAA;AAEA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AACD,eAAAC,eAAA,GAAAA,eAAA;AAAwC,eAAAC,eAAA,GAAAA,eAAA;AAnBjD,eAAAC,YAAA,GAAuB,EAAvB;AACA,eAAAC,cAAA,GAAyB,EAAzB;AACA,eAAAC,mBAAA,GAAsB;AACpB,sBAAS,CACP;AACEC,kBAAI,EAAE,UADR;AACoBC,qBAAO,EAAE;AAD7B,aADO,EAIP;AACED,kBAAI,EAAE,SADR;AACmBC,qBAAO,EAAE;AAD5B,aAJO;AADW,WAAtB;AAkBO;;AAvBuB;AAAA;AAAA,iBAwBtB,wBAAe;;;;;;;;AACL,6BAAM,KAAKL,eAAL,CAAqBM,MAArB,CAA4B;AAC9CC,gCAAQ,EAAE,iBADoC;AAE9CF,+BAAO,EAAE,uCAFqC;AAG9CG,+BAAO,EAAE,CAAC,IAAD,CAHqC;AAI9CC,uCAAe,EAAE;AAJ6B,uBAA5B,CAAN;;;AAARC,2B;;AAON,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AAjC2B;AAAA;AAAA,iBAoC5B,oBAAW;AAAA;;AACT,iBAAKC,gBAAL,GAAwB,KAAKf,WAAL,CAAiBgB,KAAjB,CAAuB;AAC7CC,oBAAM,EAAC,CAAC,EAAD,EAAI,0DAAWC,OAAX,CAAmB,CAC5B,0DAAWC,QADiB,EACR,0DAAWC,OAAX,CAAmB,MAAnB,CADQ,CAAnB,CAAJ;AADsC,aAAvB,CAAxB;AAKA,iBAAKrB,WAAL,CAAiBsB,WAAjB,GAA+BC,SAA/B,CAAyC,UAAAC,GAAG,EAAI;AAC9CC,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;;AACA,kBAAIA,GAAG,KAAK,IAAZ,EAAkB;AAChB,qBAAI,CAACG,GAAL,GAAWH,GAAG,CAACG,GAAf;AACAF,uBAAO,CAACC,GAAR,CAAY,WAAU,KAAI,CAACC,GAA3B,EAFgB,CAGhB;AACA;AACD,eALD,MAKO;AACL,qBAAI,CAAC5B,OAAL,CAAa6B,YAAb,CAA0B,EAA1B;AACD;;AACDH,qBAAO,CAACC,GAAR,CAAY,KAAI,CAAC1B,WAAL,CAAiBsB,WAA7B;AACD,aAXD,EAWG,UAAAO,GAAG,EAAI;AACRJ,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBG,GAAnB;AACD,aAbD;AAcA,iBAAKC,YAAL;AACD;AAzD2B;AAAA;AAAA,iBA2D9B,wBAAeC,MAAf,EAAqB;AACnBN,mBAAO,CAACC,GAAR,CAAYK,MAAM,CAACC,aAAP,CAAqBC,OAAjC;AACA,iBAAKjB,gBAAL,CAAsBkB,UAAtB,CAAiC;AAAChB,oBAAM,EAAEa,MAAM,CAACC,aAAP,CAAqBC;AAA9B,aAAjC;AACAR,mBAAO,CAACC,GAAR,CAAY,KAAKV,gBAAjB;AACD;AA/D6B;AAAA;AAAA,iBAgE9B,kBAAS;AAAA;;AACP,iBAAKhB,WAAL,CAAiBmC,UAAjB,GACGC,IADH,CACQ,UAAAZ,GAAG,EAAI;AACXC,qBAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,oBAAI,CAACzB,OAAL,CAAa6B,YAAb,CAA0B,EAA1B;AACD,aAJH,WAKS,UAAAS,KAAK,EAAI;AACdZ,qBAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,aAPH;AAQD;AAzE6B;AAAA;AAAA,iBA2E9B,gCAAoB;AAClBZ,mBAAO,CAACC,GAAR,CAAY,KAAKC,GAAjB;AACA,iBAAK3B,WAAL,CAAiBsC,gBAAjB,CAAkC,KAAKX,GAAvC;AACA,iBAAK5B,OAAL,CAAawC,eAAb,CAA6B,kBAA7B;AACD;AA/E6B;;AAAA;AAAA,S;;;;gBAVvB;;gBADA;;gBADW;;gBAGZ;;gBACC;;gBACA;;;;AAOIzC,yBAAmB,6DAL/B,gEAAU;AACT0C,gBAAQ,EAAE,sBADD;AAETC,gBAAQ,EAAR,8EAFS;;AAAA,OAAV,CAK+B,GAAnB3C,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACdb;AAAe;;;AAAA","file":"pre-questionario-pre-questionario-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div class=\\\"login\\\" style=\\\"text-align: center;float: left;margin-bottom: 5%;margin-left: 5%;\\\">\\n      <ion-label style=\\\"font-size:x-large;text-align: center;\\\">\\n        Questionário pré-participação\\n      </ion-label>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen=\\\"true\\\" color=\\\"primary\\\" class=\\\"ion-content\\\">\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"proximo_questionario()\\\">\\n    <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n      <div display=\\\"block\\\">\\n        <h4 style=\\\"text-align: justify;font-weight: 100;\\\">O questionário a seguir tem o objetivo de indicar a\\n          necessidade ou não de avaliação médica antes de iniciar a prática exercícios. O mesmo é composto de três\\n          etapas: <br>\\n          1 - Sinais e sintomas que apresenta ou já apresentou; <br>\\n          2 - Estado e histórico de saúde; e<br>\\n          3 - Nível de atividade física. <br>\\n          <br>\\n        </h4>\\n        <h4 style=\\\"text-align: justify;font-weight: bolder;font-size: larger;\\\">\\n          É fundamental que preste muita atenção ao que é descrito em cada item do questionário, e que responda com a\\n          verdade, para que não ocorra danos à sua saúde!\\n        </h4>\\n      </div>\\n    </ion-item>\\n\\n    <div style=\\\" height: 50%;width:100%;margin-left: 25%;\\\">\\n      <ion-checkbox style=\\\"width: 10%;height: 10%;float: left;\\\" (ionChange)=\\\"onTermsChecked($event)\\\"\\n        fromControlName=\\\"termos\\\" class=\\\"form-controll\\\" color=\\\"transparent\\\" name=\\\"termos\\\"></ion-checkbox>\\n\\n      <h2 style=\\\"margin-left: 15%;font-size: x-large;\\\">Entendi</h2>\\n    </div>\\n    <div class=\\\"estado\\\">\\n      <ion-button (click)=\\\"logout()\\\" style=\\\"width: 70%;margin-left: 20%;\\\" color=\\\"danger\\\">\\n        Sair</ion-button>\\n    </div>\\n    <div class=\\\"cidade\\\">\\n      <ion-button  style=\\\"width: 70%;margin-left: 10%;\\\" color=\\\"tertiary\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">\\n        Continuar</ion-button>\\n    </div>\\n\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n    <label class=\\\"success-message\\\">{{successMessage}}</label>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PreQuestionarioPage } from './pre-questionario.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PreQuestionarioPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PreQuestionarioPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PreQuestionarioPageRoutingModule } from './pre-questionario-routing.module';\n\nimport { PreQuestionarioPage } from './pre-questionario.page';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PreQuestionarioPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [PreQuestionarioPage]\n})\nexport class PreQuestionarioPageModule {}\n","import { Injectable } from '@angular/core';\nimport { Dados } from '../services/dados';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DadosService {\n  UsuariosListRef: AngularFireList<any>;\n  usuarioRef: AngularFireObject<any>;\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // Create\n  createBooking(dados: Dados) {\n    return this.UsuariosListRef.push({\n      nome: dados.nome,\n      email: dados.email,\n      telefone: dados.telefone,\n      estado:dados.estado,\n      cidade:dados.cidade,\n      senha:dados.senha,\n    })\n  }\n\n  // Get Single\n  getBooking(id: string) {\n    this.usuarioRef = this.db.object('/usuarios/' + id);\n    return this.usuarioRef;\n  }\n  pegarQuestionario(id){\n    this.usuarioRef = this.db.object('/questionario/'+id);\n    return this.usuarioRef;\n  }\n  // Get List\n  getBookingList() {\n    this.UsuariosListRef = this.db.list('/usuarios');\n    return this.UsuariosListRef;\n  }\n  \n\n  // Update\n /* updateBooking(id, dados: Dados) {\n    return this.bookingRef.update({\n      name: apt.name,\n      email: apt.email,\n      mobile: apt.mobile\n    })\n  }*/\n\n  // Delete\n  /*deleteBooking(id: string) {\n    this.bookingRef = this.db.object('/appointment/' + id);\n    this.bookingRef.remove();\n  }*/\n}","import { Component, OnInit } from '@angular/core';\n\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport {DadosService} from './../services/dados.service';\nimport { ToastController } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-pre-questionario',\n  templateUrl: './pre-questionario.page.html',\n  styleUrls: ['./pre-questionario.page.scss'],\n})\nexport class PreQuestionarioPage implements OnInit {\n  validations_form: FormGroup;\n\n  errorMessage: string = '';\n  successMessage: string = '';\n  validation_messages = {\n    'termos':[\n      {\n        type: 'required', message: 'É necessário aceitar essa opção.'\n      },\n      {\n        type: 'pattern', message: 'É necessário aceitar essa opção.'\n      }\n    ],\n\n  };\n  constructor(   \n     public navCtrl: NavController,\n\n    private authService: AuthenticateService,\n    private formBuilder: FormBuilder,\n    private dadosserv:DadosService,\n    public toastController: ToastController,public alertController: AlertController\n    ) { }\n    async presentAlert() {\n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n        message: '<h1>LEIA <br> COM <br>ATENÇÃO!!!</h1>',\n        buttons: ['OK'],\n        backdropDismiss: false\n      });\n  \n      await alert.present();\n    }\n    uid: string;\n\n    ngOnInit() {\n      this.validations_form = this.formBuilder.group({        \n        termos:['',Validators.compose([\n          Validators.required,Validators.pattern('true')\n        ])]}\n      );\n      this.authService.userDetails().subscribe(res => {\n        console.log('res', res);\n        if (res !== null) {\n          this.uid = res.uid;\n          console.log(\"uid = \" +this.uid)  \n          //console.log(res.uid)\n          // console.log(this.authService.lerDados(res.uid))\n        } else {\n          this.navCtrl.navigateBack('');\n        }\n        console.log(this.authService.userDetails)\n      }, err => {\n        console.log('err', err);\n      })\n      this.presentAlert()\n    }\n    \n  onTermsChecked($event){\n    console.log($event.currentTarget.checked)\n    this.validations_form.patchValue({termos: $event.currentTarget.checked})\n    console.log(this.validations_form)\n  }\n  logout() {\n    this.authService.logoutUser()\n      .then(res => {\n        console.log(res);\n        this.navCtrl.navigateBack('');\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  proximo_questionario(){\n    console.log(this.uid)\n    this.authService.setQuestionario1(this.uid);\n    this.navCtrl.navigateForward('/sinais-sintomas');\n  }\n    \n}\n","export default \".estado {\\n  float: left;\\n  width: 50%;\\n}\\n\\n.cidade {\\n  width: 50%;\\n  float: left;\\n}\\n\\n.login {\\n  background-color: secondary;\\n  font-family: Roboto;\\n  font-size: 40px;\\n  line-height: 10px;\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXHByZS1xdWVzdGlvbmFyaW8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksV0FBQTtFQUNBLFVBQUE7QUFBSjs7QUFFRTtFQUNFLFVBQUE7RUFDQSxXQUFBO0FBQ0o7O0FBQ0c7RUFDQywyQkFBQTtFQUNGLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFFRiIsImZpbGUiOiJwcmUtcXVlc3Rpb25hcmlvLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uZXN0YWRve1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gIH1cclxuICAuY2lkYWRle1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gIH1cclxuICAgLmxvZ2lue1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogc2Vjb25kYXJ5O1xyXG4gIGZvbnQtZmFtaWx5OiBSb2JvdG87XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAxMHB4O1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbn0iXX0= */\";"]}