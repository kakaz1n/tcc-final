{"version":3,"sources":["webpack:///src/app/aerobica-registro/aerobica-registro.module.ts","webpack:///src/app/aerobica-registro/aerobica-registro.page.scss","webpack:///src/app/aerobica-registro/aerobica-registro.page.ts","webpack:///src/app/aerobica-registro/aerobica-registro-routing.module.ts","webpack:///src/app/services/dados.service.ts","webpack:///src/app/aerobica-registro/aerobica-registro.page.html"],"names":["AerobicaRegistroPageModule","imports","declarations","AerobicaRegistroPage","navCtrl","formBuilder","authService","dadosserv","toastController","dadosService","idade","ciclismo","errorMessage","successMessage","validation_messages","type","message","userDetails","subscribe","res","console","log","uid","getIdade_sexo","navigateBack","err","validations_form","group","caminhada","required","batimentos","a","getBooking","snapshotChanges","data","payload","toJSON","Date","dob","y","Math","abs","now","getTime","floor","sexo","b","pegarQuestionario","resposta","corrida","toString","teste","value","Registrar_aero","goDashboard","navigateForward","selector","template","routes","path","component","AerobicaRegistroPageRoutingModule","forChild","exports","DadosService","db","dados","UsuariosListRef","push","nome","email","telefone","estado","cidade","senha","id","usuarioRef","object","list","providedIn"],"mappings":"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","file":"aerobica-registro-aerobica-registro-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AerobicaRegistroPageRoutingModule } from './aerobica-registro-routing.module';\n\nimport { AerobicaRegistroPage } from './aerobica-registro.page';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AerobicaRegistroPageRoutingModule,ReactiveFormsModule\n  ],\n  declarations: [AerobicaRegistroPage]\n})\nexport class AerobicaRegistroPageModule {}\n","export default \".login {\\n  background-color: secondary;\\n  font-family: Roboto;\\n  font-size: 40px;\\n  line-height: 10px;\\n  text-align: left;\\n}\\n\\n.container {\\n  position: relative;\\n  text-align: center;\\n  color: white;\\n}\\n\\n.centered {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  font-size: 15pt;\\n  font-weight: bold;\\n}\\n\\nion-input .text-input {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGFlcm9iaWNhLXJlZ2lzdHJvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLDJCQUFBO0VBQ0YsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQUFGOztBQUVBO0VBQ0ksa0JBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7QUFDSjs7QUFFQztFQUNHLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSxnQ0FBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQUNKOztBQUVJO0VBQWEsa0JBQUE7QUFFakIiLCJmaWxlIjoiYWVyb2JpY2EtcmVnaXN0cm8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5sb2dpbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHNlY29uZGFyeTtcclxuICBmb250LWZhbWlseTogUm9ib3RvO1xyXG4gIGZvbnQtc2l6ZTogNDBweDtcclxuICBsaW5lLWhlaWdodDogMTBweDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcbi5jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuIC5jZW50ZXJlZCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgZm9udC1zaXplOiAxNXB0O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG4gIGlvbi1pbnB1dHsgXHJcbiAgICAudGV4dC1pbnB1dHsgdGV4dC1hbGlnbjogY2VudGVyOyB9XHJcbn1cclxuIl19 */\";","import { Component, OnInit } from '@angular/core';\n\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport { DadosService } from './../services/dados.service';\nimport { ToastController } from '@ionic/angular';\nimport { formatDate } from '@angular/common';\nimport { Dados } from '../services/dados';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-aerobica-registro',\n  templateUrl: './aerobica-registro.page.html',\n  styleUrls: ['./aerobica-registro.page.scss'],\n})\nexport class AerobicaRegistroPage implements OnInit {\n  idade= 0;\n  sexo: string;\n  uid: string;\n  user: Dados;\n  teste: string;\n  resposta: '';\n  corrida: '';\n  ciclismo = '';\n\n  validations_form: FormGroup;\n\n  errorMessage: string = '';\n  successMessage: string = '';\n  validation_messages = {\n    'batimentos':[\n      {\n        type: 'required', message: 'É necessário preencher esse campo.'\n      },\n      \n    ],\n    'caminhada':[\n      {\n        type: 'required', message: 'É necessário preencher esse campo.'\n      },\n    ]\n\n  };\n\n  constructor(public navCtrl: NavController,\n    private formBuilder: FormBuilder,\n    private authService: AuthenticateService,\n    private dadosserv: DadosService,\n    public toastController: ToastController, private dadosService: DadosService\n  ) { }\n  ngOnInit() {\n\n    this.authService.userDetails().subscribe(res => {\n      console.log('res', res);\n      if (res !== null) {\n        this.uid = res.uid;\n        console.log(\"uid = \" + this.uid)\n        this.getIdade_sexo()\n\n        //console.log(res.uid)\n        // console.log(this.authService.lerDados(res.uid))\n      } else {\n        this.navCtrl.navigateBack('');\n      }\n      console.log(this.authService.userDetails)\n    }, err => {\n      console.log('err', err);\n    })\n     this.validations_form = this.formBuilder.group({      \n      caminhada: ['',Validators.required],\n      batimentos: [''],   \n    }   \n    );\n  }\n  getIdade_sexo() {\n    console.log(this.uid)\n    console.log(\"a\")\n    let a = this.dadosService.getBooking(this.uid)\n    console.log(a)\n    a.snapshotChanges().subscribe(res => {\n      const data = res.payload.toJSON()\n      console.log(data)\n      data['email']\n      console.log(formatDate(new Date, 'yyyy/MM/dd', 'en'))\n      let dob = new Date(data['dados']['dob'])\n      let y = Math.abs(Date.now() - dob.getTime())\n      this.idade = Math.floor((y / (1000 * 3600 * 24)) / 365);\n      this.sexo = data['dados']['sexo']\n      console.log(this.idade)\n      console.log(this.sexo)  \n    })\n    let b = this.dadosService.pegarQuestionario(this.uid)\n    b.snapshotChanges().subscribe(res =>{\n      const data = res.payload.toJSON()\n      this.resposta = data['questionarios']['questionario3']['resposta']\n      this.ciclismo = data['questionarios']['questionario4']['ciclismo']\n      this.corrida = data['questionarios']['questionario4']['corrida']\n      console.log(this.resposta)\n    console.log(this.ciclismo)\n    console.log(this.corrida)\n    })\n    \n    if(this.idade <= 50 && (this.resposta.toString() == 'nao' || (this.resposta.toString() =='sim' && (!this.corrida && !this.ciclismo)))) this.teste = \"Rockport\"\n    else if(this.idade > 50) this.teste = \"caminhada\"\n    else if(this.idade <= 50 && (this.resposta.toString() == 'sim' && (this.corrida || this.ciclismo)))this.teste = \"Cooper\"\n  }\n  Registrar_aero(value) {\n    this.authService.Registrar_aero(this.uid,value,this.teste)\n    this.goDashboard()\n  }\n  goDashboard(){\n    this.navCtrl.navigateForward('/dashboard');\n  }\n\n  voltar() {\n    this.navCtrl.navigateBack('aerobica-introducao')\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AerobicaRegistroPage } from './aerobica-registro.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AerobicaRegistroPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AerobicaRegistroPageRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { Dados } from '../services/dados';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DadosService {\n  UsuariosListRef: AngularFireList<any>;\n  usuarioRef: AngularFireObject<any>;\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // Create\n  createBooking(dados: Dados) {\n    return this.UsuariosListRef.push({\n      nome: dados.nome,\n      email: dados.email,\n      telefone: dados.telefone,\n      estado:dados.estado,\n      cidade:dados.cidade,\n      senha:dados.senha,\n    })\n  }\n\n  // Get Single\n  getBooking(id: string) {\n    this.usuarioRef = this.db.object('/usuarios/' + id);\n    return this.usuarioRef;\n  }\n  pegarQuestionario(id){\n    this.usuarioRef = this.db.object('/questionario/'+id);\n    return this.usuarioRef;\n  }\n  // Get List\n  getBookingList() {\n    this.UsuariosListRef = this.db.list('/usuarios');\n    return this.UsuariosListRef;\n  }\n  \n\n  // Update\n /* updateBooking(id, dados: Dados) {\n    return this.bookingRef.update({\n      name: apt.name,\n      email: apt.email,\n      mobile: apt.mobile\n    })\n  }*/\n\n  // Delete\n  /*deleteBooking(id: string) {\n    this.bookingRef = this.db.object('/appointment/' + id);\n    this.bookingRef.remove();\n  }*/\n}","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div style=\\\"width: 20%;float: left;\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"voltar()\\\">\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n    </div>\\n    <div class=\\\"login\\\" style=\\\"text-align: center;float: left;margin-bottom:05%;margin-left: 2%;\\\">\\n      <ion-label style=\\\"font-size:x-large;text-align: center;\\\">\\n        Capacidade Aeróbica<br><br>\\n      </ion-label>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content scrollY=\\\"false\\\"\\n fullscreen=\\\"true\\\" color=\\\"primary\\\" class=\\\"ion-content\\\">  \\n\\n  <div display=\\\"block\\\" style=\\\"align-items: center;text-align: center;\\\">\\n    <div *ngIf=\\\"idade > 50\\\">\\n      <!-- homens < 50-->\\n      <h2 style=\\\"text-align: center;\\\">\\n        Teste de caminhada de 6 minutos\\n      </h2>\\n      <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"Registrar_aero(validations_form.value)\\\">\\n        <h3>Distância percorrida em metros</h3>\\n        <ion-input placeholder=\\\"10\\\"  type=\\\"number\\\" style=\\\"font-size: xx-large;\\\"formControlName=\\\"caminhada\\\" class=\\\"form-controll\\\" required ></ion-input>\\n        <ion-button class=\\\"centralizado\\\" color=\\\"tertiary\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">\\n          Registrar</ion-button>\\n      </form>    \\n    </div>\\n    <div display=\\\"block\\\" *ngIf=\\\"idade <= 50 && (resposta == 'nao' || (resposta =='sim' && (!corrida && !ciclismo)))\\\">\\n      <!-- mulheres < 50-->\\n      <h2 style=\\\"text-align: center;\\\">\\n        Caminhada Rockport de 1.600 metros\\n      </h2>\\n      <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"Registrar_aero(validations_form.value)\\\">\\n        <h3>Tempo de caminhada em minutos</h3>\\n        <ion-input placeholder=\\\"10\\\"  type=\\\"number\\\" style=\\\"font-size: xx-large;\\\"formControlName=\\\"caminhada\\\" class=\\\"form-controll\\\" required ></ion-input>\\n        <h3>Número de batimentos cardíacos (bpm)</h3>\\n        <ion-input placeholder=\\\"88\\\"  type=\\\"number\\\" style=\\\"font-size: xx-large;\\\"formControlName=\\\"batimentos\\\" class=\\\"form-controll\\\" required ></ion-input>\\n        <ion-button class=\\\"centralizado\\\" color=\\\"tertiary\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">\\n          Registrar</ion-button>\\n      </form>     \\n    </div>\\n    <div display=\\\"block\\\" *ngIf=\\\"idade <= 50 && (resposta == 'sim' && (corrida || ciclismo))\\\">\\n      <!-- mulheres < 50-->\\n      <h2 style=\\\"text-align: center;\\\">\\n        Teste de Cooper\\n      </h2> \\n      <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"Registrar_aero(validations_form.value)\\\">\\n        <h3>Distância percorrida em metros</h3>\\n        <ion-input placeholder=\\\"10\\\"  type=\\\"number\\\" style=\\\"font-size: xx-large;\\\"formControlName=\\\"caminhada\\\" class=\\\"form-controll\\\" required ></ion-input>\\n        <ion-button class=\\\"centralizado\\\" color=\\\"tertiary\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">\\n          Registrar</ion-button>\\n      </form>   \\n    </div>\\n    \\n  </div>\\n</ion-content>\";"]}