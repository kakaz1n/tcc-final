{"version":3,"sources":["webpack:///src/app/antropometria-introducao/antropometria-introducao.page.html","webpack:///src/app/services/dados.service.ts","webpack:///src/app/antropometria-introducao/antropometria-introducao.page.ts","webpack:///src/app/antropometria-introducao/antropometria-introducao.module.ts","webpack:///src/app/antropometria-introducao/antropometria-introducao-routing.module.ts","webpack:///src/app/antropometria-introducao/antropometria-introducao.page.scss"],"names":["DadosService","db","dados","UsuariosListRef","push","nome","email","telefone","estado","cidade","senha","id","usuarioRef","object","list","providedIn","AntropometriaIntroducaoPage","navCtrl","authService","dadosserv","toastController","userDetails","subscribe","res","console","log","uid","navigateBack","err","setAntropometria1","navigateForward","selector","template","AntropometriaIntroducaoPageModule","imports","declarations","routes","path","component","AntropometriaIntroducaoPageRoutingModule","forChild","exports"],"mappings":"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","file":"antropometria-introducao-antropometria-introducao-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div style=\\\"width: 20%;float: left;\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"voltar()\\\">\\n          <ion-icon name=\\\"home\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n    </div>\\n    <div class=\\\"login\\\" style=\\\"text-align: center;float: left;margin-top: 2%;margin-left: 2%;\\\">\\n      <ion-label style=\\\"font-size:xx-large;text-align: center;\\\"> \\n        Antropometria\\n      </ion-label>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen=\\\"true\\\" color=\\\"primary\\\" class=\\\"ion-content\\\">\\n    <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n      <div display=\\\"block\\\">\\n        <h2 style=\\\"text-align: center;\\\">\\n          Índice de massa corpórea e proporção entre cintura e quadril\\n        </h2>\\n        <h4 style=\\\"text-align: justify;text-justify: distribute\\\">\\n          <h3 style=\\\"text-align: center;\\\">Equipamento</h3>\\n          • Fita métrica. <br>\\n          • Balança para medir seu peso.<br>         \\n\\n          <h3 style=\\\"text-align: center;\\\">Preparação</h3>\\n          • Use o mínimo possível de roupas e tire os sapatos.<br>\\n          <h3 style=\\\"text-align: center;\\\">Procedimentos</h3>\\n          1.  Pese-se na balança.<br>\\n          2. Fique em pé, apoiando a cabeça, os ombros, as nádegas e os calcanhares na parede. Use a fita métrica para medir sua altura.<br>\\n          3. Use a fita métrica para medir a circunferência de seu quadril na parte mais larga das nádegas e meça sua cintura na parte mais estreita que, em geral fica logo acima do umbigo. Tire as medidas expirando naturalmente o ar dos pulmões e sem apertar a fita métrica.<br>\\n        </h4>\\n        </div>\\n    </ion-item>\\n    <div class=\\\"centralizado\\\">\\n      <ion-button  full color=\\\"tertiary\\\" (click)=\\\"proxima_pagina()\\\">\\n        Continuar</ion-button>\\n    </div>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { Dados } from '../services/dados';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DadosService {\n  UsuariosListRef: AngularFireList<any>;\n  usuarioRef: AngularFireObject<any>;\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // Create\n  createBooking(dados: Dados) {\n    return this.UsuariosListRef.push({\n      nome: dados.nome,\n      email: dados.email,\n      telefone: dados.telefone,\n      estado:dados.estado,\n      cidade:dados.cidade,\n      senha:dados.senha,\n    })\n  }\n\n  // Get Single\n  getBooking(id: string) {\n    this.usuarioRef = this.db.object('/usuarios/' + id);\n    return this.usuarioRef;\n  }\n  pegarQuestionario(id){\n    this.usuarioRef = this.db.object('/questionario/'+id);\n    return this.usuarioRef;\n  }\n  // Get List\n  getBookingList() {\n    this.UsuariosListRef = this.db.list('/usuarios');\n    return this.UsuariosListRef;\n  }\n  \n\n  // Update\n /* updateBooking(id, dados: Dados) {\n    return this.bookingRef.update({\n      name: apt.name,\n      email: apt.email,\n      mobile: apt.mobile\n    })\n  }*/\n\n  // Delete\n  /*deleteBooking(id: string) {\n    this.bookingRef = this.db.object('/appointment/' + id);\n    this.bookingRef.remove();\n  }*/\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport {DadosService} from './../services/dados.service';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-antropometria-introducao',\n  templateUrl: './antropometria-introducao.page.html',\n  styleUrls: ['./antropometria-introducao.page.scss'],\n})\nexport class AntropometriaIntroducaoPage implements OnInit {\n\n  uid: string;\n\n  constructor(public navCtrl: NavController,\n\n    private authService: AuthenticateService,\n    private dadosserv:DadosService,\n    public toastController: ToastController) { }\n\n    ngOnInit() {\n     \n      this.authService.userDetails().subscribe(res => {\n        console.log('res', res);\n        if (res !== null) {\n          this.uid = res.uid;\n          console.log(\"uid = \" +this.uid)  \n          //console.log(res.uid)\n          // console.log(this.authService.lerDados(res.uid))\n        } else {\n          this.navCtrl.navigateBack('');\n        }\n        console.log(this.authService.userDetails)\n      }, err => {\n        console.log('err', err);\n      })\n    }\n    proxima_pagina(){\n      console.log(this.uid)\n      this.authService.setAntropometria1(this.uid);\n      this.navCtrl.navigateForward('antropometria-registro');\n    }  \n    \n    voltar(){\n     this.navCtrl.navigateBack('dashboard')\n    }\n  }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AntropometriaIntroducaoPageRoutingModule } from './antropometria-introducao-routing.module';\n\nimport { AntropometriaIntroducaoPage } from './antropometria-introducao.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AntropometriaIntroducaoPageRoutingModule\n  ],\n  declarations: [AntropometriaIntroducaoPage]\n})\nexport class AntropometriaIntroducaoPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AntropometriaIntroducaoPage } from './antropometria-introducao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AntropometriaIntroducaoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AntropometriaIntroducaoPageRoutingModule {}\n","export default \".login {\\n  background-color: secondary;\\n  font-family: Roboto;\\n  font-size: 40px;\\n  line-height: 10px;\\n  text-align: left;\\n}\\n\\nion-content {\\n  --offset-bottom: auto!important;\\n  --overflow: hidden;\\n  overflow: auto;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\nion-content::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n.centralizado {\\n  position: relative;\\n  margin-left: 30%;\\n}\\n\\n.your-class {\\n  position: fixed;\\n  left: 0;\\n  bottom: 30px;\\n  right: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGFudHJvcG9tZXRyaWEtaW50cm9kdWNhby5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUc7RUFDQywyQkFBQTtFQUNGLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFERjs7QUFHQTtFQUNJLCtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBSUEsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQUhKOztBQUhJO0VBQ0UsYUFBQTtBQUtOOztBQUVHO0VBQ0Msa0JBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUVBO0VBQ0UsZUFBQTtFQUNBLE9BQUE7RUFDQSxZQUFBO0VBQ0EsUUFBQTtBQUNGIiwiZmlsZSI6ImFudHJvcG9tZXRyaWEtaW50cm9kdWNhby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbiAgIC5sb2dpbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHNlY29uZGFyeTtcclxuICBmb250LWZhbWlseTogUm9ib3RvO1xyXG4gIGZvbnQtc2l6ZTogNDBweDtcclxuICBsaW5lLWhlaWdodDogMTBweDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcbmlvbi1jb250ZW50IHsgICAgXHJcbiAgICAtLW9mZnNldC1ib3R0b206IGF1dG8haW1wb3J0YW50O1xyXG4gICAgLS1vdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcbiAgIC5jZW50cmFsaXphZG8ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwJTtcclxufVxyXG5cclxuLnlvdXItY2xhc3Mge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBsZWZ0OiAwO1xyXG4gIGJvdHRvbTogMzBweDtcclxuICByaWdodDogMDtcclxufSJdfQ== */\";"]}