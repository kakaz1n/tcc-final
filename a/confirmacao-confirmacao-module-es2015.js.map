{"version":3,"sources":["./src/app/confirmacao/confirmacao-routing.module.ts","./src/app/confirmacao/confirmacao.page.ts","./src/app/confirmacao/confirmacao.module.ts","./src/app/confirmacao/confirmacao.page.html","./src/app/confirmacao/confirmacao.page.scss","./src/app/services/dados.service.ts"],"names":[],"mappings":"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","file":"confirmacao-confirmacao-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConfirmacaoPage } from './confirmacao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfirmacaoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConfirmacaoPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport {DadosService} from './../services/dados.service';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-confirmacao',\n  templateUrl: './confirmacao.page.html',\n  styleUrls: ['./confirmacao.page.scss'],\n})\nexport class ConfirmacaoPage implements OnInit {\n\n  validations_form: FormGroup;\n\n  errorMessage: string = '';\n  successMessage: string = '';\n  validation_messages = {\n    'termos':[\n      {\n        type: 'required', message: 'É necessário aceitar essa opção.'\n      },\n      {\n        type: 'pattern', message: 'É necessário aceitar essa opção.'\n      }\n    ],\n\n  };\n  uid: string;\n\n\n  constructor(public navCtrl: NavController,\n\n    private authService: AuthenticateService,\n    private formBuilder: FormBuilder,\n    private dadosserv:DadosService,\n    public toastController: ToastController) { }\n\n  ngOnInit() {\n    this.validations_form = this.formBuilder.group({        \n      termos:['',Validators.compose([\n        Validators.required,Validators.pattern('true')\n      ])]}\n    );\n    this.authService.userDetails().subscribe(res => {\n      console.log('res', res);\n      if (res !== null) {\n        this.uid = res.uid;\n        console.log(\"uid = \" +this.uid)  \n        //console.log(res.uid)\n        // console.log(this.authService.lerDados(res.uid))\n      } else {\n        this.navCtrl.navigateBack('');\n      }\n      console.log(this.authService.userDetails)\n    }, err => {\n      console.log('err', err);\n    })\n  }\n  onTermsChecked($event){\n    console.log($event.currentTarget.checked)\n    this.validations_form.patchValue({termos: $event.currentTarget.checked})\n    console.log(this.validations_form)\n  }\n  proxima_pagina(){\n    console.log('proxima pagina')\n    console.log(\"id\" + this.uid)\n    this.authService.setQuestionario6(this.uid);\n    this.navCtrl.navigateForward('treino-iniciar');\n  }  \n  goEstado_historico(){\n    this.navCtrl.navigateBack('estado-historico');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConfirmacaoPageRoutingModule } from './confirmacao-routing.module';\n\nimport { ConfirmacaoPage } from './confirmacao.page';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ConfirmacaoPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ConfirmacaoPage]\n})\nexport class ConfirmacaoPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div class=\\\"login\\\" style=\\\"text-align: center;float: left;margin-bottom: 5%;margin-left: 10%;\\\">\\n      <ion-label style=\\\"font-size:large;text-align: center;\\\">\\n        Confirmação sobre as informações\\n      </ion-label>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen=\\\"true\\\" color=\\\"primary\\\" class=\\\"ion-content\\\">\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"proxima_pagina()\\\">\\n    <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n      <div display=\\\"block\\\">\\n        <h4 style=\\\"text-align: justify;font-weight: bolder;font-size:x-large\\\">\\n          Declaro que as informações prestadas sobre os meus sinais e sintomas, nível atual de atividade física e estado/histórico de saúde são verdadeiras, me responsabilizando por qualquer resposta incorreta e suas respectivas consequências à minha saúde, durante a realização dos exercícios e testes propostos.\\n        </h4>\\n      </div>\\n    </ion-item>\\n\\n    <div style=\\\" height: 50%;width:100%;margin-left: 25%;\\\">\\n      <ion-checkbox style=\\\"width: 10%;height: 10%;float: left;\\\" (ionChange)=\\\"onTermsChecked($event)\\\"\\n        fromControlName=\\\"termos\\\" class=\\\"form-controll\\\" color=\\\"transparent\\\" name=\\\"termos\\\"></ion-checkbox>\\n\\n      <h2 style=\\\"margin-left: 15%;font-size: x-large;\\\">Entendi</h2>\\n    </div>\\n    <div class=\\\"estado\\\">\\n      <ion-button (click)=\\\"goEstado_historico()\\\" style=\\\"width: 70%;margin-left: 20%;\\\" color=\\\"danger\\\">\\n        Voltar</ion-button>\\n    </div>\\n    <div class=\\\"cidade\\\">\\n      <ion-button  style=\\\"width: 70%;margin-left: 10%;\\\" color=\\\"tertiary\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">\\n        Continuar</ion-button>\\n    </div>\\n\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n    <label class=\\\"success-message\\\">{{successMessage}}</label>\\n  </form>\\n</ion-content>\\n\";","export default \".estado {\\n  float: left;\\n  width: 50%;\\n}\\n\\n.cidade {\\n  width: 50%;\\n  float: left;\\n}\\n\\n.login {\\n  background-color: secondary;\\n  font-family: Roboto;\\n  font-size: 40px;\\n  line-height: 10px;\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGNvbmZpcm1hY2FvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLFdBQUE7RUFDQSxVQUFBO0FBQUo7O0FBRUU7RUFDRSxVQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUNHO0VBQ0MsMkJBQUE7RUFDRixtQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FBRUYiLCJmaWxlIjoiY29uZmlybWFjYW8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5lc3RhZG97XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgfVxyXG4gIC5jaWRhZGV7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgfVxyXG4gICAubG9naW57XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzZWNvbmRhcnk7XHJcbiAgZm9udC1mYW1pbHk6IFJvYm90bztcclxuICBmb250LXNpemU6IDQwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDEwcHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufSJdfQ== */\";","import { Injectable } from '@angular/core';\nimport { Dados } from '../services/dados';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DadosService {\n  UsuariosListRef: AngularFireList<any>;\n  usuarioRef: AngularFireObject<any>;\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // Create\n  createBooking(dados: Dados) {\n    return this.UsuariosListRef.push({\n      nome: dados.nome,\n      email: dados.email,\n      telefone: dados.telefone,\n      estado:dados.estado,\n      cidade:dados.cidade,\n      senha:dados.senha,\n    })\n  }\n\n  // Get Single\n  getBooking(id: string) {\n    this.usuarioRef = this.db.object('/usuarios/' + id);\n    return this.usuarioRef;\n  }\n  pegarQuestionario(id){\n    this.usuarioRef = this.db.object('/questionario/'+id);\n    return this.usuarioRef;\n  }\n  // Get List\n  getBookingList() {\n    this.UsuariosListRef = this.db.list('/usuarios');\n    return this.UsuariosListRef;\n  }\n  \n\n  // Update\n /* updateBooking(id, dados: Dados) {\n    return this.bookingRef.update({\n      name: apt.name,\n      email: apt.email,\n      mobile: apt.mobile\n    })\n  }*/\n\n  // Delete\n  /*deleteBooking(id: string) {\n    this.bookingRef = this.db.object('/appointment/' + id);\n    this.bookingRef.remove();\n  }*/\n}"],"sourceRoot":"webpack:///"}