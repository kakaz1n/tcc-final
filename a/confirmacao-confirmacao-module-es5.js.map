{"version":3,"sources":["webpack:///src/app/confirmacao/confirmacao-routing.module.ts","webpack:///src/app/confirmacao/confirmacao.page.ts","webpack:///src/app/confirmacao/confirmacao.module.ts","webpack:///src/app/confirmacao/confirmacao.page.html","webpack:///src/app/confirmacao/confirmacao.page.scss","webpack:///src/app/services/dados.service.ts"],"names":["routes","path","component","ConfirmacaoPageRoutingModule","imports","forChild","exports","ConfirmacaoPage","navCtrl","authService","formBuilder","dadosserv","toastController","errorMessage","successMessage","validation_messages","type","message","validations_form","group","termos","compose","required","pattern","userDetails","subscribe","res","console","log","uid","navigateBack","err","$event","currentTarget","checked","patchValue","setQuestionario6","navigateForward","selector","template","ConfirmacaoPageModule","declarations","DadosService","db","dados","UsuariosListRef","push","nome","email","telefone","estado","cidade","senha","id","usuarioRef","object","list","providedIn"],"mappings":"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","file":"confirmacao-confirmacao-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConfirmacaoPage } from './confirmacao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfirmacaoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConfirmacaoPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport {DadosService} from './../services/dados.service';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-confirmacao',\n  templateUrl: './confirmacao.page.html',\n  styleUrls: ['./confirmacao.page.scss'],\n})\nexport class ConfirmacaoPage implements OnInit {\n\n  validations_form: FormGroup;\n\n  errorMessage: string = '';\n  successMessage: string = '';\n  validation_messages = {\n    'termos':[\n      {\n        type: 'required', message: 'É necessário aceitar essa opção.'\n      },\n      {\n        type: 'pattern', message: 'É necessário aceitar essa opção.'\n      }\n    ],\n\n  };\n  uid: string;\n\n\n  constructor(public navCtrl: NavController,\n\n    private authService: AuthenticateService,\n    private formBuilder: FormBuilder,\n    private dadosserv:DadosService,\n    public toastController: ToastController) { }\n\n  ngOnInit() {\n    this.validations_form = this.formBuilder.group({        \n      termos:['',Validators.compose([\n        Validators.required,Validators.pattern('true')\n      ])]}\n    );\n    this.authService.userDetails().subscribe(res => {\n      console.log('res', res);\n      if (res !== null) {\n        this.uid = res.uid;\n        console.log(\"uid = \" +this.uid)  \n        //console.log(res.uid)\n        // console.log(this.authService.lerDados(res.uid))\n      } else {\n        this.navCtrl.navigateBack('');\n      }\n      console.log(this.authService.userDetails)\n    }, err => {\n      console.log('err', err);\n    })\n  }\n  onTermsChecked($event){\n    console.log($event.currentTarget.checked)\n    this.validations_form.patchValue({termos: $event.currentTarget.checked})\n    console.log(this.validations_form)\n  }\n  proxima_pagina(){\n    console.log('proxima pagina')\n    console.log(\"id\" + this.uid)\n    this.authService.setQuestionario6(this.uid);\n    this.navCtrl.navigateForward('treino-iniciar');\n  }  \n  goEstado_historico(){\n    this.navCtrl.navigateBack('estado-historico');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConfirmacaoPageRoutingModule } from './confirmacao-routing.module';\n\nimport { ConfirmacaoPage } from './confirmacao.page';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ConfirmacaoPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ConfirmacaoPage]\n})\nexport class ConfirmacaoPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div class=\\\"login\\\" style=\\\"text-align: center;float: left;margin-bottom: 5%;margin-left: 10%;\\\">\\n      <ion-label style=\\\"font-size:large;text-align: center;\\\">\\n        Confirmação sobre as informações\\n      </ion-label>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen=\\\"true\\\" color=\\\"primary\\\" class=\\\"ion-content\\\">\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"proxima_pagina()\\\">\\n    <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n      <div display=\\\"block\\\">\\n        <h4 style=\\\"text-align: justify;font-weight: bolder;font-size:x-large\\\">\\n          Declaro que as informações prestadas sobre os meus sinais e sintomas, nível atual de atividade física e estado/histórico de saúde são verdadeiras, me responsabilizando por qualquer resposta incorreta e suas respectivas consequências à minha saúde, durante a realização dos exercícios e testes propostos.\\n        </h4>\\n      </div>\\n    </ion-item>\\n\\n    <div style=\\\" height: 50%;width:100%;margin-left: 25%;\\\">\\n      <ion-checkbox style=\\\"width: 10%;height: 10%;float: left;\\\" (ionChange)=\\\"onTermsChecked($event)\\\"\\n        fromControlName=\\\"termos\\\" class=\\\"form-controll\\\" color=\\\"transparent\\\" name=\\\"termos\\\"></ion-checkbox>\\n\\n      <h2 style=\\\"margin-left: 15%;font-size: x-large;\\\">Entendi</h2>\\n    </div>\\n    <div class=\\\"estado\\\">\\n      <ion-button (click)=\\\"goEstado_historico()\\\" style=\\\"width: 70%;margin-left: 20%;\\\" color=\\\"danger\\\">\\n        Voltar</ion-button>\\n    </div>\\n    <div class=\\\"cidade\\\">\\n      <ion-button  style=\\\"width: 70%;margin-left: 10%;\\\" color=\\\"tertiary\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">\\n        Continuar</ion-button>\\n    </div>\\n\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n    <label class=\\\"success-message\\\">{{successMessage}}</label>\\n  </form>\\n</ion-content>\\n\";","export default \".estado {\\n  float: left;\\n  width: 50%;\\n}\\n\\n.cidade {\\n  width: 50%;\\n  float: left;\\n}\\n\\n.login {\\n  background-color: secondary;\\n  font-family: Roboto;\\n  font-size: 40px;\\n  line-height: 10px;\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGNvbmZpcm1hY2FvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLFdBQUE7RUFDQSxVQUFBO0FBQUo7O0FBRUU7RUFDRSxVQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUNHO0VBQ0MsMkJBQUE7RUFDRixtQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FBRUYiLCJmaWxlIjoiY29uZmlybWFjYW8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5lc3RhZG97XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgfVxyXG4gIC5jaWRhZGV7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgfVxyXG4gICAubG9naW57XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzZWNvbmRhcnk7XHJcbiAgZm9udC1mYW1pbHk6IFJvYm90bztcclxuICBmb250LXNpemU6IDQwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IDEwcHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufSJdfQ== */\";","import { Injectable } from '@angular/core';\nimport { Dados } from '../services/dados';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DadosService {\n  UsuariosListRef: AngularFireList<any>;\n  usuarioRef: AngularFireObject<any>;\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // Create\n  createBooking(dados: Dados) {\n    return this.UsuariosListRef.push({\n      nome: dados.nome,\n      email: dados.email,\n      telefone: dados.telefone,\n      estado:dados.estado,\n      cidade:dados.cidade,\n      senha:dados.senha,\n    })\n  }\n\n  // Get Single\n  getBooking(id: string) {\n    this.usuarioRef = this.db.object('/usuarios/' + id);\n    return this.usuarioRef;\n  }\n  pegarQuestionario(id){\n    this.usuarioRef = this.db.object('/questionario/'+id);\n    return this.usuarioRef;\n  }\n  // Get List\n  getBookingList() {\n    this.UsuariosListRef = this.db.list('/usuarios');\n    return this.UsuariosListRef;\n  }\n  \n\n  // Update\n /* updateBooking(id, dados: Dados) {\n    return this.bookingRef.update({\n      name: apt.name,\n      email: apt.email,\n      mobile: apt.mobile\n    })\n  }*/\n\n  // Delete\n  /*deleteBooking(id: string) {\n    this.bookingRef = this.db.object('/appointment/' + id);\n    this.bookingRef.remove();\n  }*/\n}"]}