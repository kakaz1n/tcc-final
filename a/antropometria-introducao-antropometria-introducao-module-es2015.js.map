{"version":3,"sources":["./src/app/antropometria-introducao/antropometria-introducao.page.html","./src/app/services/dados.service.ts","./src/app/antropometria-introducao/antropometria-introducao.page.ts","./src/app/antropometria-introducao/antropometria-introducao.module.ts","./src/app/antropometria-introducao/antropometria-introducao-routing.module.ts","./src/app/antropometria-introducao/antropometria-introducao.page.scss"],"names":[],"mappings":"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","file":"antropometria-introducao-antropometria-introducao-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"secondary\\\">\\n    <div style=\\\"width: 20%;float: left;\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"voltar()\\\">\\n          <ion-icon name=\\\"home\\\"></ion-icon>\\n        </ion-button>\\n      </ion-buttons>\\n    </div>\\n    <div class=\\\"login\\\" style=\\\"text-align: center;float: left;margin-top: 2%;margin-left: 2%;\\\">\\n      <ion-label style=\\\"font-size:xx-large;text-align: center;\\\"> \\n        Antropometria\\n      </ion-label>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content fullscreen=\\\"true\\\" color=\\\"primary\\\" class=\\\"ion-content\\\">\\n    <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n      <div display=\\\"block\\\">\\n        <h2 style=\\\"text-align: center;\\\">\\n          Índice de massa corpórea e proporção entre cintura e quadril\\n        </h2>\\n        <h4 style=\\\"text-align: justify;text-justify: distribute\\\">\\n          <h3 style=\\\"text-align: center;\\\">Equipamento</h3>\\n          • Fita métrica. <br>\\n          • Balança para medir seu peso.<br>         \\n\\n          <h3 style=\\\"text-align: center;\\\">Preparação</h3>\\n          • Use o mínimo possível de roupas e tire os sapatos.<br>\\n          <h3 style=\\\"text-align: center;\\\">Procedimentos</h3>\\n          1.  Pese-se na balança.<br>\\n          2. Fique em pé, apoiando a cabeça, os ombros, as nádegas e os calcanhares na parede. Use a fita métrica para medir sua altura.<br>\\n          3. Use a fita métrica para medir a circunferência de seu quadril na parte mais larga das nádegas e meça sua cintura na parte mais estreita que, em geral fica logo acima do umbigo. Tire as medidas expirando naturalmente o ar dos pulmões e sem apertar a fita métrica.<br>\\n        </h4>\\n        </div>\\n    </ion-item>\\n    <div class=\\\"centralizado\\\">\\n      <ion-button  full color=\\\"tertiary\\\" (click)=\\\"proxima_pagina()\\\">\\n        Continuar</ion-button>\\n    </div>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { Dados } from '../services/dados';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DadosService {\n  UsuariosListRef: AngularFireList<any>;\n  usuarioRef: AngularFireObject<any>;\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // Create\n  createBooking(dados: Dados) {\n    return this.UsuariosListRef.push({\n      nome: dados.nome,\n      email: dados.email,\n      telefone: dados.telefone,\n      estado:dados.estado,\n      cidade:dados.cidade,\n      senha:dados.senha,\n    })\n  }\n\n  // Get Single\n  getBooking(id: string) {\n    this.usuarioRef = this.db.object('/usuarios/' + id);\n    return this.usuarioRef;\n  }\n  pegarQuestionario(id){\n    this.usuarioRef = this.db.object('/questionario/'+id);\n    return this.usuarioRef;\n  }\n  // Get List\n  getBookingList() {\n    this.UsuariosListRef = this.db.list('/usuarios');\n    return this.UsuariosListRef;\n  }\n  \n\n  // Update\n /* updateBooking(id, dados: Dados) {\n    return this.bookingRef.update({\n      name: apt.name,\n      email: apt.email,\n      mobile: apt.mobile\n    })\n  }*/\n\n  // Delete\n  /*deleteBooking(id: string) {\n    this.bookingRef = this.db.object('/appointment/' + id);\n    this.bookingRef.remove();\n  }*/\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthenticateService } from '../services/authentication.service';\nimport { NavController } from '@ionic/angular';\nimport {DadosService} from './../services/dados.service';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-antropometria-introducao',\n  templateUrl: './antropometria-introducao.page.html',\n  styleUrls: ['./antropometria-introducao.page.scss'],\n})\nexport class AntropometriaIntroducaoPage implements OnInit {\n\n  uid: string;\n\n  constructor(public navCtrl: NavController,\n\n    private authService: AuthenticateService,\n    private dadosserv:DadosService,\n    public toastController: ToastController) { }\n\n    ngOnInit() {\n     \n      this.authService.userDetails().subscribe(res => {\n        console.log('res', res);\n        if (res !== null) {\n          this.uid = res.uid;\n          console.log(\"uid = \" +this.uid)  \n          //console.log(res.uid)\n          // console.log(this.authService.lerDados(res.uid))\n        } else {\n          this.navCtrl.navigateBack('');\n        }\n        console.log(this.authService.userDetails)\n      }, err => {\n        console.log('err', err);\n      })\n    }\n    proxima_pagina(){\n      console.log(this.uid)\n      this.authService.setAntropometria1(this.uid);\n      this.navCtrl.navigateForward('antropometria-registro');\n    }  \n    \n    voltar(){\n     this.navCtrl.navigateBack('dashboard')\n    }\n  }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AntropometriaIntroducaoPageRoutingModule } from './antropometria-introducao-routing.module';\n\nimport { AntropometriaIntroducaoPage } from './antropometria-introducao.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AntropometriaIntroducaoPageRoutingModule\n  ],\n  declarations: [AntropometriaIntroducaoPage]\n})\nexport class AntropometriaIntroducaoPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AntropometriaIntroducaoPage } from './antropometria-introducao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AntropometriaIntroducaoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AntropometriaIntroducaoPageRoutingModule {}\n","export default \".login {\\n  background-color: secondary;\\n  font-family: Roboto;\\n  font-size: 40px;\\n  line-height: 10px;\\n  text-align: left;\\n}\\n\\nion-content {\\n  --offset-bottom: auto!important;\\n  --overflow: hidden;\\n  overflow: auto;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\nion-content::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n.centralizado {\\n  position: relative;\\n  margin-left: 30%;\\n}\\n\\n.your-class {\\n  position: fixed;\\n  left: 0;\\n  bottom: 30px;\\n  right: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGFudHJvcG9tZXRyaWEtaW50cm9kdWNhby5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUc7RUFDQywyQkFBQTtFQUNGLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFERjs7QUFHQTtFQUNJLCtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBSUEsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtBQUhKOztBQUhJO0VBQ0UsYUFBQTtBQUtOOztBQUVHO0VBQ0Msa0JBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUVBO0VBQ0UsZUFBQTtFQUNBLE9BQUE7RUFDQSxZQUFBO0VBQ0EsUUFBQTtBQUNGIiwiZmlsZSI6ImFudHJvcG9tZXRyaWEtaW50cm9kdWNhby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbiAgIC5sb2dpbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHNlY29uZGFyeTtcclxuICBmb250LWZhbWlseTogUm9ib3RvO1xyXG4gIGZvbnQtc2l6ZTogNDBweDtcclxuICBsaW5lLWhlaWdodDogMTBweDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcbmlvbi1jb250ZW50IHsgICAgXHJcbiAgICAtLW9mZnNldC1ib3R0b206IGF1dG8haW1wb3J0YW50O1xyXG4gICAgLS1vdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAmOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcbiAgIC5jZW50cmFsaXphZG8ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwJTtcclxufVxyXG5cclxuLnlvdXItY2xhc3Mge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBsZWZ0OiAwO1xyXG4gIGJvdHRvbTogMzBweDtcclxuICByaWdodDogMDtcclxufSJdfQ== */\";"],"sourceRoot":"webpack:///"}